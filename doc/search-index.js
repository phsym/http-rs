var searchIndex = {};
searchIndex['http_rs'] = {"items":[],"paths":[]};
searchIndex['http'] = {"items":[[0,"","http","Low level HTTP toolkit library",null,null],[4,"Protocol","","Protocol implementations",null,null],[13,"HTTP","","Unsecured HTTP",0,null],[13,"HTTPS","","Secured HTTP. Only available with \"ssl\" feature",0,null],[5,"open","","Create a new client. The implementation which may differ according to the `protocol` is hidden\nbehind a boxed `Http` trait",null,{"inputs":[{"name":"protocol"},{"name":"a"}],"output":{"name":"result"}}],[0,"methods","","Methods definitions",null,null],[4,"Method","http::methods","Supported HTTP methods",null,null],[13,"GET","","",1,null],[13,"POST","","",1,null],[13,"PUT","","",1,null],[13,"DELETE","","",1,null],[0,"constants","http","Defines some usefull constants",null,null],[0,"properties","http::constants","Properties names constant for HTTP headers",null,null],[17,"CONTENT_LENGTH","http::constants::properties","",null,null],[17,"CONTENT_TYPE","","",null,null],[17,"ACCEPT","","",null,null],[17,"DATE","","",null,null],[17,"LOCATION","","",null,null],[0,"mimetypes","http::constants","Mime types constants",null,null],[17,"TEXT_PLAIN","http::constants::mimetypes","",null,null],[17,"APP_JSON","","",null,null],[17,"APP_XML","","",null,null],[17,"APP_OCTET_STREAM","","",null,null],[0,"client","http","Module containing HTTP client implementations",null,null],[3,"BaseClient","http::client","A simple and low-level HTTP client implementation",null,null],[6,"HttpClient","","Client for unsecured HTTP",null,null],[6,"HttpsClient","","Client for secured HTTP. Only available if \"ssl\" feature is enabled",null,null],[8,"HttpSend","","Trait for object capable of sending HttpRequests",null,null],[10,"send_stream","","Start a new request and return a `BufWriter` to the underlying stream\nso you can write the request body.",2,{"inputs":[{"name":"httpsend"},{"name":"method"},{"name":"str"},{"name":"option"}],"output":{"name":"result"}}],[10,"get_reply","","Get the reply from stream. Must be called only after a request has been sent",2,{"inputs":[{"name":"httpsend"}],"output":{"name":"result"}}],[11,"send","","Send a full request and return the `HttpReply`.",2,{"inputs":[{"name":"httpsend"},{"name":"method"},{"name":"str"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[8,"WithHeader","","Represent object with properties. Provides methods for accessing those properties",null,null],[10,"get_property","","Get a property from client permanent header",3,{"inputs":[{"name":"withheader"},{"name":"string"}],"output":{"name":"option"}}],[10,"set_property","","Set a property in permanent header",3,{"inputs":[{"name":"withheader"},{"name":"string"},{"name":"string"}],"output":null}],[10,"unset_property","","Remove a property from permanent header",3,{"inputs":[{"name":"withheader"},{"name":"string"}],"output":null}],[10,"get_properties_name","","Return an iterator over properties names from permanent header",3,{"inputs":[{"name":"withheader"}],"output":{"name":"keys"}}],[10,"iter","","Return an iterator over properties from permanent header",3,{"inputs":[{"name":"withheader"}],"output":{"name":"iter"}}],[8,"Http","","Represent and Http object with send capability and properties in header",null,null],[0,"messages","http","HTTP messages definitions",null,null],[3,"HttpReply","http::messages","A structure that represents an HTTP reply",null,null],[0,"streams","http","Http I/O streams definitions",null,null],[6,"HttpStream","http::streams","HttpStream for unsecured HTTP Input/Output",null,null],[6,"HttpsStream","","HttpsStream for secured HTTPS Input/Output. Only available if \"ssl\" feature is enabled",null,null],[8,"Open","","Represent a type that can be opened (ie connected) to a remote `SocketAddress`",null,null],[10,"open","","Create a new Instance of `Self` connected to `addr`",4,{"inputs":[{"name":"open"},{"name":"a"}],"output":{"name":"result"}}],[8,"Stream","","A trait representing an openable read/write stream",null,null],[14,"option!","http","Unwrap an `Option<T>` or return an `Err` if it's None",null,null],[14,"map!","","Quickly build a `std::collections::HashMap`",null,null],[14,"debug!","","Print debug message only if built in debug mode",null,null],[14,"str!","","Return a String if conversion is possible by calling to_string() on the provided expression",null,null],[14,"smap!","","Build a `std::collections::HashMap<String, String>`",null,null],[14,"try_all!","","Wrap all the given expressions in a `try!`",null,null],[11,"as_slice","http::methods","Return a static string representation of the method name",1,null],[11,"as_bytes","","Return the method name representation as an utf8 encoded byte slice",1,null],[11,"send","http::client","Send a full request and return the `HttpReply`.",2,null],[11,"new","","Create a new HTTP client that will send requests to `addr`.\n# Example\n```no_run\nuse http::client::HttpClient;\nlet mut client = HttpClient::new(\"www.google.com:80\");\n// Send some requests\n```",5,null],[11,"get_property","","",5,null],[11,"set_property","","",5,null],[11,"unset_property","","",5,null],[11,"get_properties_name","","",5,null],[11,"iter","","",5,null],[11,"send_stream","","",5,null],[11,"get_reply","","",5,null],[11,"parse","http::messages","Contruct a new HttpReply by parsing the input from `reader`\n# Examples\n```no_run\nuse std::net::TcpStream;\nuse std::io::BufReader;\nuse http::messages::HttpReply;\nlet mut socket = TcpStream::connect(\"host_address:port\").unwrap();\n// Do some stuff with socket and assume an http reply is coming\nlet reader = BufReader::new(socket);\nlet r = HttpReply::parse(reader).unwrap();\n```",6,null],[11,"get_length","","Get the `Content-Length` property from header",6,null],[11,"get_reader","","Return a `BufReader` to read the reply's content",6,null],[11,"get_version","","Get the HTTP version from reply. Returns a string like `\"HTTP/1.0\"`",6,null],[11,"get_code","","Get the status code from reply",6,null],[11,"get_status","","Get the status text from reply",6,null],[11,"get_property","","Get a property from reply header",6,null],[11,"get_properties_name","","Return an iterator over properties names set in reply header",6,null],[11,"iter","","Return an iterator over properties from reply header",6,null],[11,"read_all","","Read all the reply content into a buffer and return this buffer",6,null],[11,"read_string","","Read all the repl and return it into a `String`",6,null],[11,"fmt","","",6,null],[11,"fmt","","",6,null],[11,"open","http::streams","",7,null],[11,"open","","",8,null]],"paths":[[4,"Protocol"],[4,"Method"],[8,"HttpSend"],[8,"WithHeader"],[8,"Open"],[3,"BaseClient"],[3,"HttpReply"],[6,"HttpStream"],[6,"HttpsStream"]]};
searchIndex['openssl'] = {"items":[[0,"","openssl","",null,null],[0,"asn1","","",null,null],[3,"Asn1Time","openssl::asn1","",null,null],[11,"new","","Wraps existing ASN1_TIME and takes ownership",0,null],[11,"days_from_now","","Creates a new time on specified interval in days from now",0,{"inputs":[{"name":"asn1time"},{"name":"u32"}],"output":{"name":"result"}}],[11,"get_handle","","Returns raw handle",0,null],[11,"drop","","",0,{"inputs":[{"name":"asn1time"}],"output":null}],[0,"bn","openssl","",null,null],[3,"BigNum","openssl::bn","",null,null],[4,"RNGProperty","","",null,null],[13,"MsbMaybeZero","","",1,null],[13,"MsbOne","","",1,null],[13,"TwoMsbOne","","",1,null],[0,"unchecked","","",null,null],[6,"Output","openssl::bn::unchecked","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[6,"Output","","",null,null],[11,"clone","openssl::bn","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"bignum"}}],[6,"Output","openssl::bn::unchecked","",null,null],[11,"neg","openssl::bn","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"bignum"}}],[11,"clone","","",1,{"inputs":[{"name":"rngproperty"}],"output":{"name":"rngproperty"}}],[11,"new","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"new_from","","",2,{"inputs":[{"name":"bignum"},{"name":"u64"}],"output":{"name":"result"}}],[11,"from_dec_str","","",2,{"inputs":[{"name":"bignum"},{"name":"str"}],"output":{"name":"result"}}],[11,"from_hex_str","","",2,{"inputs":[{"name":"bignum"},{"name":"str"}],"output":{"name":"result"}}],[11,"new_from_slice","","",2,null],[11,"checked_sqr","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_nnmod","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_add","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_sub","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_mul","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_sqr","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_exp","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_exp","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod_inv","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"add_word","","",2,{"inputs":[{"name":"bignum"},{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"sub_word","","",2,{"inputs":[{"name":"bignum"},{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"mul_word","","",2,{"inputs":[{"name":"bignum"},{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"div_word","","",2,{"inputs":[{"name":"bignum"},{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"mod_word","","",2,{"inputs":[{"name":"bignum"},{"name":"c_ulong"}],"output":{"name":"result"}}],[11,"checked_gcd","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_generate_prime","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"},{"name":"bool"},{"name":"option"},{"name":"option"}],"output":{"name":"result"}}],[11,"is_prime","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"is_prime_fast","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_new_random","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"},{"name":"rngproperty"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_new_pseudo_random","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"},{"name":"rngproperty"},{"name":"bool"}],"output":{"name":"result"}}],[11,"checked_rand_in_range","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_pseudo_rand_in_range","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"set_bit","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"clear_bit","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"is_bit_set","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"bool"}}],[11,"mask_bits","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"checked_shl1","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_shr1","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_add","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_sub","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mul","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_div","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_mod","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"result"}}],[11,"checked_shl","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"checked_shr","","",2,{"inputs":[{"name":"bignum"},{"name":"i32"}],"output":{"name":"result"}}],[11,"negate","","",2,{"inputs":[{"name":"bignum"}],"output":null}],[11,"abs_cmp","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"ordering"}}],[11,"is_negative","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"bool"}}],[11,"num_bits","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"i32"}}],[11,"num_bytes","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"i32"}}],[11,"to_vec","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"vec"}}],[11,"to_dec_str","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"string"}}],[11,"to_hex_str","","",2,{"inputs":[{"name":"bignum"}],"output":{"name":"string"}}],[11,"fmt","","",2,{"inputs":[{"name":"bignum"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"eq","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"bool"}}],[11,"cmp","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",2,{"inputs":[{"name":"bignum"},{"name":"bignum"}],"output":{"name":"option"}}],[11,"drop","","",2,{"inputs":[{"name":"bignum"}],"output":null}],[0,"bio","openssl","",null,null],[3,"MemBio","openssl::bio","",null,null],[11,"drop","","",3,{"inputs":[{"name":"membio"}],"output":null}],[11,"new","","Creates a new owned memory based BIO",3,{"inputs":[{"name":"membio"}],"output":{"name":"result"}}],[11,"borrowed","","Returns a \"borrow\", i.e. it has no ownership",3,null],[11,"unwrap","","Consumes current bio and returns wrapped value\nNote that data ownership is lost and\nshould be managed manually",3,null],[11,"get_handle","","Temporarily gets wrapped value",3,null],[11,"read","","",3,null],[11,"write","","",3,null],[11,"flush","","",3,{"inputs":[{"name":"membio"}],"output":{"name":"result"}}],[0,"crypto","openssl","",null,null],[0,"hash","openssl::crypto","",null,null],[3,"Hasher","openssl::crypto::hash","Provides message digest (hash) computation.",null,null],[4,"Type","","Message digest (hash) type.",null,null],[13,"MD5","","",4,null],[13,"SHA1","","",4,null],[13,"SHA224","","",4,null],[13,"SHA256","","",4,null],[13,"SHA384","","",4,null],[13,"SHA512","","",4,null],[13,"RIPEMD160","","",4,null],[5,"hash","","Computes the hash of the `data` with the hash `t`.",null,null],[11,"clone","","",4,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[11,"md_len","","Returns the length of the message digest.",4,{"inputs":[{"name":"type"}],"output":{"name":"usize"}}],[11,"evp_md","","Internal interface subject to removal.",4,null],[11,"new","","Creates a new `Hasher` with the specified hash type.",5,{"inputs":[{"name":"hasher"},{"name":"type"}],"output":{"name":"hasher"}}],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",5,{"inputs":[{"name":"hasher"}],"output":{"name":"vec"}}],[11,"write","","",5,null],[11,"flush","","",5,{"inputs":[{"name":"hasher"}],"output":{"name":"result"}}],[11,"clone","","",5,{"inputs":[{"name":"hasher"}],"output":{"name":"hasher"}}],[11,"drop","","",5,{"inputs":[{"name":"hasher"}],"output":null}],[0,"hmac","openssl::crypto","",null,null],[3,"HMAC","openssl::crypto::hmac","Provides HMAC computation.",null,null],[5,"hmac","","Computes the HMAC of the `data` with the hash `t` and `key`.",null,null],[11,"new","","Creates a new `HMAC` with the specified hash type using the `key`.",6,null],[11,"finish","","Returns the hash of the data written since creation or\nthe last `finish` and resets the hasher.",6,{"inputs":[{"name":"hmac"}],"output":{"name":"vec"}}],[11,"write","","",6,null],[11,"flush","","",6,{"inputs":[{"name":"hmac"}],"output":{"name":"result"}}],[11,"clone","","",6,{"inputs":[{"name":"hmac"}],"output":{"name":"hmac"}}],[11,"drop","","",6,{"inputs":[{"name":"hmac"}],"output":null}],[0,"pkcs5","openssl::crypto","",null,null],[5,"pbkdf2_hmac_sha1","openssl::crypto::pkcs5","Derives a key from a password and salt using the PBKDF2-HMAC-SHA1 algorithm.",null,null],[0,"pkey","openssl::crypto","",null,null],[3,"PKey","openssl::crypto::pkey","",null,null],[4,"Parts","","",null,null],[13,"Neither","","",7,null],[13,"Public","","",7,null],[13,"Both","","",7,null],[4,"Role","","Represents a role an asymmetric key might be appropriate for.",null,null],[13,"Encrypt","","",8,null],[13,"Decrypt","","",8,null],[13,"Sign","","",8,null],[13,"Verify","","",8,null],[4,"EncryptionPadding","","Type of encryption padding to use.",null,null],[13,"OAEP","","",9,null],[13,"PKCS1v15","","",9,null],[11,"clone","","",7,{"inputs":[{"name":"parts"}],"output":{"name":"parts"}}],[11,"clone","","",8,{"inputs":[{"name":"role"}],"output":{"name":"role"}}],[11,"clone","","",9,{"inputs":[{"name":"encryptionpadding"}],"output":{"name":"encryptionpadding"}}],[11,"new","","",10,{"inputs":[{"name":"pkey"}],"output":{"name":"pkey"}}],[11,"from_handle","","",10,null],[11,"private_key_from_pem","","Reads private key from PEM, takes ownership of handle",10,{"inputs":[{"name":"pkey"},{"name":"r"}],"output":{"name":"result"}}],[11,"gen","","",10,{"inputs":[{"name":"pkey"},{"name":"usize"}],"output":null}],[11,"save_pub","","Returns a serialized form of the public key, suitable for load_pub().",10,{"inputs":[{"name":"pkey"}],"output":{"name":"vec"}}],[11,"load_pub","","Loads a serialized form of the public key, as produced by save_pub().",10,null],[11,"save_priv","","Returns a serialized form of the public and private keys, suitable for\nload_priv().",10,{"inputs":[{"name":"pkey"}],"output":{"name":"vec"}}],[11,"load_priv","","Loads a serialized form of the public and private keys, as produced by\nsave_priv().",10,null],[11,"write_pem","","Stores private key as a PEM",10,{"inputs":[{"name":"pkey"},{"name":"w"}],"output":{"name":"result"}}],[11,"size","","Returns the size of the public key modulus.",10,{"inputs":[{"name":"pkey"}],"output":{"name":"usize"}}],[11,"can","","Returns whether this pkey object can perform the specified role.",10,{"inputs":[{"name":"pkey"},{"name":"role"}],"output":{"name":"bool"}}],[11,"max_data","","Returns the maximum amount of data that can be encrypted by an encrypt()\ncall.",10,{"inputs":[{"name":"pkey"}],"output":{"name":"usize"}}],[11,"encrypt_with_padding","","",10,null],[11,"decrypt_with_padding","","",10,null],[11,"encrypt","","Encrypts data using OAEP padding, returning the encrypted data. The\nsupplied data must not be larger than max_data().",10,null],[11,"decrypt","","Decrypts data, expecting OAEP padding, returning the decrypted data.",10,null],[11,"sign","","Signs data, using OpenSSL's default scheme and sha256. Unlike encrypt(),\ncan process an arbitrary amount of data; returns the signature.",10,null],[11,"verify","","Verifies a signature s (using OpenSSL's default scheme and sha256) on a\nmessage m. Returns true if the signature is valid, and false otherwise.",10,null],[11,"sign_with_hash","","",10,null],[11,"verify_with_hash","","",10,null],[11,"get_handle","","",10,null],[11,"drop","","",10,{"inputs":[{"name":"pkey"}],"output":null}],[0,"rand","openssl::crypto","",null,null],[5,"rand_bytes","openssl::crypto::rand","",null,{"inputs":[{"name":"usize"}],"output":{"name":"vec"}}],[0,"symm","openssl::crypto","",null,null],[3,"Crypter","openssl::crypto::symm","Represents a symmetric cipher context.",null,null],[4,"Mode","","",null,null],[13,"Encrypt","","",11,null],[13,"Decrypt","","",11,null],[4,"Type","","",null,null],[13,"AES_128_ECB","","",12,null],[13,"AES_128_CBC","","",12,null],[13,"AES_256_ECB","","",12,null],[13,"AES_256_CBC","","",12,null],[13,"RC4_128","","",12,null],[5,"encrypt","","Encrypts data, using the specified crypter type in encrypt mode with the\nspecified key and iv; returns the resulting (encrypted) data.",null,null],[5,"decrypt","","Decrypts data, using the specified crypter type in decrypt mode with the\nspecified key and iv; returns the resulting (decrypted) data.",null,null],[11,"clone","","",11,{"inputs":[{"name":"mode"}],"output":{"name":"mode"}}],[11,"clone","","",12,{"inputs":[{"name":"type"}],"output":{"name":"type"}}],[11,"new","","",13,{"inputs":[{"name":"crypter"},{"name":"type"}],"output":{"name":"crypter"}}],[11,"pad","","Enables or disables padding. If padding is disabled, total amount of\ndata encrypted must be a multiple of block size.",13,{"inputs":[{"name":"crypter"},{"name":"bool"}],"output":null}],[11,"init","","Initializes this crypter.",13,null],[11,"update","","Update this crypter with more data to encrypt or decrypt. Returns\nencrypted or decrypted bytes.",13,null],[11,"finalize","","Finish crypting. Returns the remaining partial block of output, if any.",13,{"inputs":[{"name":"crypter"}],"output":{"name":"vec"}}],[11,"drop","","",13,{"inputs":[{"name":"crypter"}],"output":null}],[0,"memcmp","openssl::crypto","",null,null],[5,"eq","openssl::crypto::memcmp","Returns `true` iff `a` and `b` contain the same bytes.",null,null],[0,"ssl","openssl","",null,null],[3,"SslContextOptions","openssl::ssl","",null,null],[3,"SslVerifyMode","","",null,null],[3,"SslContext","","An SSL context object",null,null],[3,"Ssl","","",null,null],[3,"SslStream","","A stream wrapper which handles SSL encryption for an underlying stream.",null,null],[4,"SslMethod","","Determines the SSL method supported",null,null],[13,"Sslv23","","Support the SSLv2, SSLv3 and TLSv1 protocols.",14,null],[13,"Sslv3","","Only support the SSLv3 protocol.",14,null],[13,"Tlsv1","","Only support the TLSv1 protocol.",14,null],[4,"MaybeSslStream","","A utility type to help in cases where the use of SSL is decided at runtime.",null,null],[13,"Ssl","","A connection using SSL",15,null],[13,"Normal","","A connection not using SSL",15,null],[0,"error","","",null,null],[4,"SslError","openssl::ssl::error","An SSL error",null,null],[13,"StreamError","","The underlying stream reported an error",16,null],[13,"SslSessionClosed","","The SSL session has been closed by the other end",16,null],[13,"OpenSslErrors","","An error in the OpenSSL library",16,null],[4,"OpensslError","","An error from the OpenSSL library",null,null],[13,"UnknownError","","An unknown error",17,null],[12,"library","openssl::ssl::error::OpensslError","The library reporting the error",17,null],[12,"function","","The function reporting the error",17,null],[12,"reason","","The reason for the error",17,null],[11,"fmt","openssl::ssl::error","",16,{"inputs":[{"name":"sslerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"fmt","","",16,{"inputs":[{"name":"sslerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"description","","",16,{"inputs":[{"name":"sslerror"}],"output":{"name":"str"}}],[11,"cause","","",16,{"inputs":[{"name":"sslerror"}],"output":{"name":"option"}}],[11,"eq","","",17,{"inputs":[{"name":"opensslerror"},{"name":"opensslerror"}],"output":{"name":"bool"}}],[11,"ne","","",17,{"inputs":[{"name":"opensslerror"},{"name":"opensslerror"}],"output":{"name":"bool"}}],[11,"clone","","",17,{"inputs":[{"name":"opensslerror"}],"output":{"name":"opensslerror"}}],[11,"fmt","","",17,{"inputs":[{"name":"opensslerror"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"get","","Creates a new `OpenSslErrors` with the current contents of the error\nstack.",16,{"inputs":[{"name":"sslerror"}],"output":{"name":"sslerror"}}],[11,"from_error","","Creates an `SslError` from the raw numeric error code.",16,{"inputs":[{"name":"sslerror"},{"name":"c_ulong"}],"output":{"name":"sslerror"}}],[6,"VerifyCallback","openssl::ssl","The signature of functions that can be used to manually verify certificates",null,null],[6,"VerifyCallbackData","","The signature of functions that can be used to manually verify certificates\nwhen user-data should be carried for all verification process",null,null],[17,"SSL_OP_LEGACY_SERVER_CONNECT","","",null,null],[17,"SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG","","",null,null],[17,"SSL_OP_TLSEXT_PADDING","","",null,null],[17,"SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER","","",null,null],[17,"SSL_OP_SAFARI_ECDHE_ECDSA_BUG","","",null,null],[17,"SSL_OP_SSLEAY_080_CLIENT_DH_BUG","","",null,null],[17,"SSL_OP_TLS_D5_BUG","","",null,null],[17,"SSL_OP_TLS_BLOCK_PADDING_BUG","","",null,null],[17,"SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS","","",null,null],[17,"SSL_OP_ALL","","",null,null],[17,"SSL_OP_NO_QUERY_MTU","","",null,null],[17,"SSL_OP_COOKIE_EXCHANGE","","",null,null],[17,"SSL_OP_NO_TICKET","","",null,null],[17,"SSL_OP_CISCO_ANYCONNECT","","",null,null],[17,"SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION","","",null,null],[17,"SSL_OP_NO_COMPRESSION","","",null,null],[17,"SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION","","",null,null],[17,"SSL_OP_SINGLE_ECDH_USE","","",null,null],[17,"SSL_OP_SINGLE_DH_USE","","",null,null],[17,"SSL_OP_CIPHER_SERVER_PREFERENCE","","",null,null],[17,"SSL_OP_TLS_ROLLBACK_BUG","","",null,null],[17,"SSL_OP_NO_SSLV2","","",null,null],[17,"SSL_OP_NO_SSLV3","","",null,null],[17,"SSL_OP_NO_TLSV1","","",null,null],[17,"SSL_OP_NO_TLSV1_2","","",null,null],[17,"SSL_OP_NO_TLSV1_1","","",null,null],[17,"SSL_OP_NO_DTLSV1","","",null,null],[17,"SSL_OP_NO_DTLSV1_2","","",null,null],[17,"SSL_VERIFY_PEER","","/// Verify that the server's certificate is trusted",null,null],[17,"SSL_VERIFY_NONE","","/// Do not verify the server's certificate",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","/// Terminate handshake if client did not return a certificate.\n/// Use together with SSL_VERIFY_PEER.",null,null],[11,"hash","","",18,null],[11,"cmp","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"option"}}],[11,"lt","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"le","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"gt","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"ge","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"clone","","",18,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"eq","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"ne","","",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",18,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"all","","Returns the set containing all flags.",18,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"bits","","Returns the raw value of the flags currently stored.",18,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"c_long"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"c_long"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"c_long"}],"output":{"name":"sslcontextoptions"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",18,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":null}],[6,"Output","","",null,null],[11,"bitor","","Returns the union of the two sets of flags.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[6,"Output","","",null,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[6,"Output","","",null,null],[11,"bitand","","Returns the intersection between the two sets of flags.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[6,"Output","","",null,null],[11,"sub","","Returns the set difference of the two sets of flags.",18,{"inputs":[{"name":"sslcontextoptions"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[6,"Output","","",null,null],[11,"not","","Returns the complement of this set of flags.",18,{"inputs":[{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"eq","","",14,{"inputs":[{"name":"sslmethod"},{"name":"sslmethod"}],"output":{"name":"bool"}}],[11,"ne","","",14,{"inputs":[{"name":"sslmethod"},{"name":"sslmethod"}],"output":{"name":"bool"}}],[11,"hash","","",14,null],[11,"fmt","","",14,{"inputs":[{"name":"sslmethod"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"clone","","",14,{"inputs":[{"name":"sslmethod"}],"output":{"name":"sslmethod"}}],[11,"is_dtls","","",14,{"inputs":[{"name":"sslmethod"}],"output":{"name":"bool"}}],[11,"is_dtlsv1","","",14,{"inputs":[{"name":"sslmethod"}],"output":{"name":"bool"}}],[11,"is_dtlsv1_2","","",14,{"inputs":[{"name":"sslmethod"}],"output":{"name":"bool"}}],[11,"hash","","",19,null],[11,"cmp","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"ordering"}}],[11,"partial_cmp","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"option"}}],[11,"lt","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"le","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"gt","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"ge","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"clone","","",19,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"eq","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"ne","","",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"empty","","Returns an empty set of flags.",19,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"all","","Returns the set containing all flags.",19,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"bits","","Returns the raw value of the flags currently stored.",19,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"i32"}}],[11,"from_bits","","Convert from underlying bit representation, unless that\nrepresentation contains bits that do not correspond to a flag.",19,{"inputs":[{"name":"sslverifymode"},{"name":"i32"}],"output":{"name":"option"}}],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits\nthat do not correspond to flags.",19,{"inputs":[{"name":"sslverifymode"},{"name":"i32"}],"output":{"name":"sslverifymode"}}],[11,"is_empty","","Returns `true` if no flags are currently stored.",19,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"is_all","","Returns `true` if all flags are currently set.",19,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"bool"}}],[11,"insert","","Inserts the specified flags in-place.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":null}],[11,"remove","","Removes the specified flags in-place.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":null}],[11,"toggle","","Toggles the specified flags in-place.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":null}],[6,"Output","","",null,null],[11,"bitor","","Returns the union of the two sets of flags.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[6,"Output","","",null,null],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[6,"Output","","",null,null],[11,"bitand","","Returns the intersection between the two sets of flags.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[6,"Output","","",null,null],[11,"sub","","Returns the set difference of the two sets of flags.",19,{"inputs":[{"name":"sslverifymode"},{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[6,"Output","","",null,null],[11,"not","","Returns the complement of this set of flags.",19,{"inputs":[{"name":"sslverifymode"}],"output":{"name":"sslverifymode"}}],[11,"fmt","","",20,{"inputs":[{"name":"sslcontext"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",20,{"inputs":[{"name":"sslcontext"}],"output":null}],[11,"new","","Creates a new SSL context.",20,{"inputs":[{"name":"sslcontext"},{"name":"sslmethod"}],"output":{"name":"result"}}],[11,"set_verify","","Configures the certificate verification method for new connections.",20,{"inputs":[{"name":"sslcontext"},{"name":"sslverifymode"},{"name":"option"}],"output":null}],[11,"set_verify_with_data","","Configures the certificate verification method for new connections also\ncarrying supplied data.",20,{"inputs":[{"name":"sslcontext"},{"name":"sslverifymode"},{"name":"verifycallbackdata"},{"name":"t"}],"output":null}],[11,"set_verify_depth","","Sets verification depth",20,{"inputs":[{"name":"sslcontext"},{"name":"u32"}],"output":null}],[11,"set_read_ahead","","",20,{"inputs":[{"name":"sslcontext"},{"name":"u32"}],"output":null}],[11,"set_CA_file","","Specifies the file that contains trusted CA certificates.",20,{"inputs":[{"name":"sslcontext"},{"name":"path"}],"output":{"name":"result"}}],[11,"set_certificate_file","","Specifies the file that contains certificate",20,{"inputs":[{"name":"sslcontext"},{"name":"path"},{"name":"x509filetype"}],"output":{"name":"result"}}],[11,"set_certificate","","Specifies the certificate",20,{"inputs":[{"name":"sslcontext"},{"name":"x509"}],"output":{"name":"result"}}],[11,"add_extra_chain_cert","","Adds a certificate to the certificate chain presented together with the\ncertificate specified using set_certificate()",20,{"inputs":[{"name":"sslcontext"},{"name":"x509"}],"output":{"name":"result"}}],[11,"set_private_key_file","","Specifies the file that contains private key",20,{"inputs":[{"name":"sslcontext"},{"name":"path"},{"name":"x509filetype"}],"output":{"name":"result"}}],[11,"set_private_key","","Specifies the private key",20,{"inputs":[{"name":"sslcontext"},{"name":"pkey"}],"output":{"name":"result"}}],[11,"check_private_key","","Check consistency of private key and certificate",20,{"inputs":[{"name":"sslcontext"}],"output":{"name":"result"}}],[11,"set_cipher_list","","",20,{"inputs":[{"name":"sslcontext"},{"name":"str"}],"output":{"name":"result"}}],[11,"set_options","","",20,{"inputs":[{"name":"sslcontext"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"get_options","","",20,{"inputs":[{"name":"sslcontext"}],"output":{"name":"sslcontextoptions"}}],[11,"clear_options","","",20,{"inputs":[{"name":"sslcontext"},{"name":"sslcontextoptions"}],"output":{"name":"sslcontextoptions"}}],[11,"fmt","","",21,{"inputs":[{"name":"ssl"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"drop","","",21,{"inputs":[{"name":"ssl"}],"output":null}],[11,"new","","",21,{"inputs":[{"name":"ssl"},{"name":"sslcontext"}],"output":{"name":"result"}}],[11,"set_hostname","","Set the host name to be used with SNI (Server Name Indication).",21,{"inputs":[{"name":"ssl"},{"name":"str"}],"output":{"name":"result"}}],[11,"get_peer_certificate","","",21,{"inputs":[{"name":"ssl"}],"output":{"name":"option"}}],[11,"clone","","",22,{"inputs":[{"name":"sslstream"}],"output":{"name":"sslstream"}}],[11,"try_clone","","Create a new independently owned handle to the underlying socket.",22,{"inputs":[{"name":"sslstream"}],"output":{"name":"result"}}],[11,"fmt","","",22,{"inputs":[{"name":"sslstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new_server_from","","",22,{"inputs":[{"name":"sslstream"},{"name":"ssl"},{"name":"s"}],"output":{"name":"result"}}],[11,"new_from","","Attempts to create a new SSL stream from a given `Ssl` instance.",22,{"inputs":[{"name":"sslstream"},{"name":"ssl"},{"name":"s"}],"output":{"name":"result"}}],[11,"new","","Creates a new SSL stream",22,{"inputs":[{"name":"sslstream"},{"name":"sslcontext"},{"name":"s"}],"output":{"name":"result"}}],[11,"new_server","","Creates a new SSL server stream",22,{"inputs":[{"name":"sslstream"},{"name":"sslcontext"},{"name":"s"}],"output":{"name":"result"}}],[11,"get_ref","","Returns a reference to the underlying stream.",22,{"inputs":[{"name":"sslstream"}],"output":{"name":"s"}}],[11,"get_mut","","Returns a mutable reference to the underlying stream.",22,{"inputs":[{"name":"sslstream"}],"output":{"name":"s"}}],[11,"get_compression","","Get the compression currently in use.  The result will be\neither None, indicating no compression is in use, or a string\nwith the compression name.",22,{"inputs":[{"name":"sslstream"}],"output":{"name":"option"}}],[11,"read","","",22,null],[11,"write","","",22,null],[11,"flush","","",22,{"inputs":[{"name":"sslstream"}],"output":{"name":"result"}}],[11,"fmt","","",15,{"inputs":[{"name":"maybesslstream"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"read","","",15,null],[11,"write","","",15,null],[11,"flush","","",15,{"inputs":[{"name":"maybesslstream"}],"output":{"name":"result"}}],[11,"get_ref","","Returns a reference to the underlying stream.",15,{"inputs":[{"name":"maybesslstream"}],"output":{"name":"s"}}],[11,"get_mut","","Returns a mutable reference to the underlying stream.",15,{"inputs":[{"name":"maybesslstream"}],"output":{"name":"s"}}],[0,"x509","openssl","",null,null],[3,"X509StoreContext","openssl::x509","",null,null],[3,"X509Generator","","Generator of private key/certificate pairs",null,null],[3,"X509","","A public key certificate",null,null],[3,"X509Name","","",null,null],[4,"X509FileType","","",null,null],[13,"PEM","","",23,null],[13,"ASN1","","",23,null],[13,"Default","","",23,null],[4,"KeyUsage","","",null,null],[13,"DigitalSignature","","",24,null],[13,"NonRepudiation","","",24,null],[13,"KeyEncipherment","","",24,null],[13,"DataEncipherment","","",24,null],[13,"KeyAgreement","","",24,null],[13,"KeyCertSign","","",24,null],[13,"CRLSign","","",24,null],[13,"EncipherOnly","","",24,null],[13,"DecipherOnly","","",24,null],[4,"ExtKeyUsage","","",null,null],[13,"ServerAuth","","",25,null],[13,"ClientAuth","","",25,null],[13,"CodeSigning","","",25,null],[13,"EmailProtection","","",25,null],[13,"TimeStamping","","",25,null],[13,"MsCodeInd","","",25,null],[13,"MsCodeCom","","",25,null],[13,"MsCtlSign","","",25,null],[13,"MsSgc","","",25,null],[13,"MsEfs","","",25,null],[13,"NsSgc","","",25,null],[4,"X509ValidationError","","",null,null],[13,"X509UnableToGetIssuerCert","","",26,null],[13,"X509UnableToGetCrl","","",26,null],[13,"X509UnableToDecryptCertSignature","","",26,null],[13,"X509UnableToDecryptCrlSignature","","",26,null],[13,"X509UnableToDecodeIssuerPublicKey","","",26,null],[13,"X509CertSignatureFailure","","",26,null],[13,"X509CrlSignatureFailure","","",26,null],[13,"X509CertNotYetValid","","",26,null],[13,"X509CertHasExpired","","",26,null],[13,"X509CrlNotYetValid","","",26,null],[13,"X509CrlHasExpired","","",26,null],[13,"X509ErrorInCertNotBeforeField","","",26,null],[13,"X509ErrorInCertNotAfterField","","",26,null],[13,"X509ErrorInCrlLastUpdateField","","",26,null],[13,"X509ErrorInCrlNextUpdateField","","",26,null],[13,"X509OutOfMem","","",26,null],[13,"X509DepthZeroSelfSignedCert","","",26,null],[13,"X509SelfSignedCertInChain","","",26,null],[13,"X509UnableToGetIssuerCertLocally","","",26,null],[13,"X509UnableToVerifyLeafSignature","","",26,null],[13,"X509CertChainTooLong","","",26,null],[13,"X509CertRevoked","","",26,null],[13,"X509InvalidCA","","",26,null],[13,"X509PathLengthExceeded","","",26,null],[13,"X509InvalidPurpose","","",26,null],[13,"X509CertUntrusted","","",26,null],[13,"X509CertRejected","","",26,null],[13,"X509SubjectIssuerMismatch","","",26,null],[13,"X509AkidSkidMismatch","","",26,null],[13,"X509AkidIssuerSerialMismatch","","",26,null],[13,"X509KeyusageNoCertsign","","",26,null],[13,"X509UnableToGetCrlIssuer","","",26,null],[13,"X509UnhandledCriticalExtension","","",26,null],[13,"X509KeyusageNoCrlSign","","",26,null],[13,"X509UnhandledCriticalCrlExtension","","",26,null],[13,"X509InvalidNonCA","","",26,null],[13,"X509ProxyPathLengthExceeded","","",26,null],[13,"X509KeyusageNoDigitalSignature","","",26,null],[13,"X509ProxyCertificatesNotAllowed","","",26,null],[13,"X509InvalidExtension","","",26,null],[13,"X509InavlidPolicyExtension","","",26,null],[13,"X509NoExplicitPolicy","","",26,null],[13,"X509DifferentCrlScope","","",26,null],[13,"X509UnsupportedExtensionFeature","","",26,null],[13,"X509UnnestedResource","","",26,null],[13,"X509PermittedVolation","","",26,null],[13,"X509ExcludedViolation","","",26,null],[13,"X509SubtreeMinmax","","",26,null],[13,"X509UnsupportedConstraintType","","",26,null],[13,"X509UnsupportedConstraintSyntax","","",26,null],[13,"X509UnsupportedNameSyntax","","",26,null],[13,"X509CrlPathValidationError","","",26,null],[13,"X509ApplicationVerification","","",26,null],[13,"X509UnknownError","","",26,null],[11,"clone","","",23,{"inputs":[{"name":"x509filetype"}],"output":{"name":"x509filetype"}}],[11,"new","","",27,null],[11,"get_error","","",27,{"inputs":[{"name":"x509storecontext"}],"output":{"name":"option"}}],[11,"get_current_cert","","",27,{"inputs":[{"name":"x509storecontext"}],"output":{"name":"option"}}],[11,"clone","","",24,{"inputs":[{"name":"keyusage"}],"output":{"name":"keyusage"}}],[11,"clone","","",25,{"inputs":[{"name":"extkeyusage"}],"output":{"name":"extkeyusage"}}],[11,"new","","Creates a new generator with the following defaults:",28,{"inputs":[{"name":"x509generator"}],"output":{"name":"x509generator"}}],[11,"set_bitlength","","Sets desired bit length",28,{"inputs":[{"name":"x509generator"},{"name":"u32"}],"output":{"name":"x509generator"}}],[11,"set_valid_period","","Sets certificate validity period in days since today",28,{"inputs":[{"name":"x509generator"},{"name":"u32"}],"output":{"name":"x509generator"}}],[11,"set_CN","","Sets Common Name of certificate",28,{"inputs":[{"name":"x509generator"},{"name":"str"}],"output":{"name":"x509generator"}}],[11,"set_usage","","Sets what for certificate could be used",28,null],[11,"set_ext_usage","","Sets allowed extended usage of certificate",28,null],[11,"set_sign_hash","","",28,{"inputs":[{"name":"x509generator"},{"name":"type"}],"output":{"name":"x509generator"}}],[11,"generate","","Generates a private key and a signed certificate and returns them",28,{"inputs":[{"name":"x509generator"}],"output":{"name":"result"}}],[11,"sign","","Signs certificate with a private key and returns it\nNote: That the bit-length of the private key is used (set_bitlength is ignored)",28,{"inputs":[{"name":"x509generator"},{"name":"pkey"}],"output":{"name":"result"}}],[11,"new","","Creates new from handle with desired ownership.",29,null],[11,"new_in_ctx","","Creates a new certificate from context. Doesn't take ownership\nof handle.",29,null],[11,"from_pem","","Reads certificate from PEM, takes ownership of handle",29,{"inputs":[{"name":"x509"},{"name":"r"}],"output":{"name":"result"}}],[11,"get_handle","","",29,null],[11,"subject_name","","",29,{"inputs":[{"name":"x509"}],"output":{"name":"x509name"}}],[11,"public_key","","",29,{"inputs":[{"name":"x509"}],"output":{"name":"pkey"}}],[11,"fingerprint","","Returns certificate fingerprint calculated using provided hash",29,{"inputs":[{"name":"x509"},{"name":"type"}],"output":{"name":"option"}}],[11,"write_pem","","Writes certificate as PEM",29,{"inputs":[{"name":"x509"},{"name":"w"}],"output":{"name":"result"}}],[11,"drop","","",29,{"inputs":[{"name":"x509"}],"output":null}],[11,"clone","","",26,{"inputs":[{"name":"x509validationerror"}],"output":{"name":"x509validationerror"}}]],"paths":[[3,"Asn1Time"],[4,"RNGProperty"],[3,"BigNum"],[3,"MemBio"],[4,"Type"],[3,"Hasher"],[3,"HMAC"],[4,"Parts"],[4,"Role"],[4,"EncryptionPadding"],[3,"PKey"],[4,"Mode"],[4,"Type"],[3,"Crypter"],[4,"SslMethod"],[4,"MaybeSslStream"],[4,"SslError"],[4,"OpensslError"],[3,"SslContextOptions"],[3,"SslVerifyMode"],[3,"SslContext"],[3,"Ssl"],[3,"SslStream"],[4,"X509FileType"],[4,"KeyUsage"],[4,"ExtKeyUsage"],[4,"X509ValidationError"],[3,"X509StoreContext"],[3,"X509Generator"],[3,"X509"]]};
searchIndex['openssl_sys'] = {"items":[[0,"","openssl_sys","",null,null],[3,"EVP_MD_CTX","","",null,null],[3,"HMAC_CTX","","",null,null],[3,"X509V3_CTX","","",null,null],[3,"BIGNUM","","",null,null],[12,"d","","",0,null],[12,"top","","",0,null],[12,"dmax","","",0,null],[12,"neg","","",0,null],[12,"flags","","",0,null],[5,"init","","",null,{"inputs":[],"output":null}],[5,"BIO_eof","","",null,null],[5,"SSL_CTX_set_options","","",null,null],[5,"SSL_CTX_get_options","","",null,null],[5,"SSL_CTX_clear_options","","",null,null],[5,"SSL_CTX_add_extra_chain_cert","","",null,null],[5,"SSL_CTX_set_read_ahead","","",null,null],[5,"ASN1_INTEGER_set","","",null,null],[5,"ASN1_STRING_type_new","","",null,null],[5,"ASN1_TIME_free","","",null,null],[5,"BIO_ctrl","","",null,null],[5,"BIO_free_all","","",null,null],[5,"BIO_new","","",null,null],[5,"BIO_read","","",null,null],[5,"BIO_write","","",null,null],[5,"BIO_s_mem","","",null,null],[5,"BN_new","","",null,null],[5,"BN_dup","","",null,null],[5,"BN_clear_free","","",null,null],[5,"BN_CTX_new","","",null,null],[5,"BN_CTX_free","","",null,null],[5,"BN_num_bits","","",null,null],[5,"BN_set_negative","","",null,null],[5,"BN_set_word","","",null,null],[5,"BN_add","","",null,null],[5,"BN_div","","",null,null],[5,"BN_exp","","",null,null],[5,"BN_gcd","","",null,null],[5,"BN_mod_add","","",null,null],[5,"BN_mod_exp","","",null,null],[5,"BN_mod_inverse","","",null,null],[5,"BN_mod_mul","","",null,null],[5,"BN_mod_sqr","","",null,null],[5,"BN_mod_sub","","",null,null],[5,"BN_mul","","",null,null],[5,"BN_nnmod","","",null,null],[5,"BN_add_word","","",null,null],[5,"BN_sub_word","","",null,null],[5,"BN_mul_word","","",null,null],[5,"BN_div_word","","",null,null],[5,"BN_mod_word","","",null,null],[5,"BN_sqr","","",null,null],[5,"BN_sub","","",null,null],[5,"BN_clear_bit","","",null,null],[5,"BN_is_bit_set","","",null,null],[5,"BN_lshift","","",null,null],[5,"BN_lshift1","","",null,null],[5,"BN_mask_bits","","",null,null],[5,"BN_rshift","","",null,null],[5,"BN_set_bit","","",null,null],[5,"BN_rshift1","","",null,null],[5,"BN_cmp","","",null,null],[5,"BN_ucmp","","",null,null],[5,"BN_generate_prime_ex","","",null,null],[5,"BN_is_prime_ex","","",null,null],[5,"BN_is_prime_fasttest_ex","","",null,null],[5,"BN_rand","","",null,null],[5,"BN_pseudo_rand","","",null,null],[5,"BN_rand_range","","",null,null],[5,"BN_pseudo_rand_range","","",null,null],[5,"BN_bin2bn","","",null,null],[5,"BN_bn2bin","","",null,null],[5,"BN_dec2bn","","",null,null],[5,"BN_bn2dec","","",null,null],[5,"BN_hex2bn","","",null,null],[5,"BN_bn2hex","","",null,null],[5,"CRYPTO_num_locks","","",null,null],[5,"CRYPTO_set_locking_callback","","",null,null],[5,"CRYPTO_free","","",null,null],[5,"CRYPTO_memcmp","","",null,null],[5,"ERR_get_error","","",null,null],[5,"ERR_lib_error_string","","",null,null],[5,"ERR_func_error_string","","",null,null],[5,"ERR_reason_error_string","","",null,null],[5,"ERR_load_crypto_strings","","",null,null],[5,"EVP_md5","","",null,null],[5,"EVP_ripemd160","","",null,null],[5,"EVP_sha1","","",null,null],[5,"EVP_sha224","","",null,null],[5,"EVP_sha256","","",null,null],[5,"EVP_sha384","","",null,null],[5,"EVP_sha512","","",null,null],[5,"EVP_aes_128_cbc","","",null,null],[5,"EVP_aes_128_ecb","","",null,null],[5,"EVP_aes_256_cbc","","",null,null],[5,"EVP_aes_256_ecb","","",null,null],[5,"EVP_rc4","","",null,null],[5,"EVP_CIPHER_CTX_new","","",null,null],[5,"EVP_CIPHER_CTX_set_padding","","",null,null],[5,"EVP_CIPHER_CTX_free","","",null,null],[5,"EVP_CipherInit","","",null,null],[5,"EVP_CipherUpdate","","",null,null],[5,"EVP_CipherFinal","","",null,null],[5,"EVP_DigestInit","","",null,null],[5,"EVP_DigestInit_ex","","",null,null],[5,"EVP_DigestUpdate","","",null,null],[5,"EVP_DigestFinal","","",null,null],[5,"EVP_DigestFinal_ex","","",null,null],[5,"EVP_MD_CTX_create","","",null,null],[5,"EVP_MD_CTX_copy_ex","","",null,null],[5,"EVP_MD_CTX_destroy","","",null,null],[5,"EVP_PKEY_new","","",null,null],[5,"EVP_PKEY_free","","",null,null],[5,"EVP_PKEY_assign","","",null,null],[5,"EVP_PKEY_get1_RSA","","",null,null],[5,"EVP_PKEY_set1_RSA","","",null,null],[5,"HMAC_CTX_init","","",null,null],[5,"HMAC_CTX_cleanup","","",null,null],[5,"HMAC_CTX_copy","","",null,null],[5,"HMAC_Init_ex_shim","","",null,null],[5,"HMAC_Final_shim","","",null,null],[5,"HMAC_Update_shim","","",null,null],[5,"PEM_read_bio_X509","","",null,null],[5,"PEM_read_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_PrivateKey","","",null,null],[5,"PEM_write_bio_X509","","",null,null],[5,"PKCS5_PBKDF2_HMAC_SHA1","","",null,null],[5,"RAND_bytes","","",null,null],[5,"RSA_generate_key","","",null,null],[5,"RSA_private_decrypt","","",null,null],[5,"RSA_public_encrypt","","",null,null],[5,"RSA_sign","","",null,null],[5,"RSA_size","","",null,null],[5,"RSA_verify","","",null,null],[5,"SSL_library_init","","",null,null],[5,"SSL_load_error_strings","","",null,null],[5,"SSLv3_method","","",null,null],[5,"TLSv1_method","","",null,null],[5,"SSLv23_method","","",null,null],[5,"SSL_new","","",null,null],[5,"SSL_free","","",null,null],[5,"SSL_set_bio","","",null,null],[5,"SSL_get_rbio","","",null,null],[5,"SSL_get_wbio","","",null,null],[5,"SSL_accept","","",null,null],[5,"SSL_connect","","",null,null],[5,"SSL_ctrl","","",null,null],[5,"SSL_get_error","","",null,null],[5,"SSL_read","","",null,null],[5,"SSL_write","","",null,null],[5,"SSL_get_ex_data_X509_STORE_CTX_idx","","",null,null],[5,"SSL_get_SSL_CTX","","",null,null],[5,"SSL_get_current_compression","","",null,null],[5,"SSL_get_peer_certificate","","",null,null],[5,"SSL_COMP_get_name","","",null,null],[5,"SSL_CTX_new","","",null,null],[5,"SSL_CTX_free","","",null,null],[5,"SSL_CTX_set_verify","","",null,null],[5,"SSL_CTX_set_verify_depth","","",null,null],[5,"SSL_CTX_load_verify_locations","","",null,null],[5,"SSL_CTX_get_ex_new_index","","",null,null],[5,"SSL_CTX_set_ex_data","","",null,null],[5,"SSL_CTX_get_ex_data","","",null,null],[5,"SSL_CTX_use_certificate_file","","",null,null],[5,"SSL_CTX_use_certificate","","",null,null],[5,"SSL_CTX_use_PrivateKey_file","","",null,null],[5,"SSL_CTX_use_PrivateKey","","",null,null],[5,"SSL_CTX_check_private_key","","",null,null],[5,"SSL_CTX_set_cipher_list","","",null,null],[5,"SSL_CTX_ctrl","","",null,null],[5,"X509_add_ext","","",null,null],[5,"X509_digest","","",null,null],[5,"X509_free","","",null,null],[5,"X509_get_serialNumber","","",null,null],[5,"X509_get_subject_name","","",null,null],[5,"X509_gmtime_adj","","",null,null],[5,"X509_new","","",null,null],[5,"X509_set_issuer_name","","",null,null],[5,"X509_set_notAfter","","",null,null],[5,"X509_set_notBefore","","",null,null],[5,"X509_set_version","","",null,null],[5,"X509_set_pubkey","","",null,null],[5,"X509_sign","","",null,null],[5,"X509_get_pubkey","","",null,null],[5,"X509_EXTENSION_free","","",null,null],[5,"X509_NAME_add_entry_by_txt","","",null,null],[5,"X509_NAME_get_index_by_NID","","",null,null],[5,"X509_NAME_get_entry","","",null,null],[5,"X509_NAME_ENTRY_get_data","","",null,null],[5,"ASN1_STRING_to_UTF8","","",null,null],[5,"X509_STORE_CTX_get_current_cert","","",null,null],[5,"X509_STORE_CTX_get_error","","",null,null],[5,"X509_STORE_CTX_get_ex_data","","",null,null],[5,"X509V3_EXT_conf_nid","","",null,null],[5,"X509V3_set_ctx","","",null,null],[5,"i2d_RSA_PUBKEY","","",null,null],[5,"d2i_RSA_PUBKEY","","",null,null],[5,"i2d_RSAPrivateKey","","",null,null],[5,"d2i_RSAPrivateKey","","",null,null],[0,"probe","","",null,null],[3,"ProbeResult","openssl_sys::probe","",null,null],[12,"cert_file","","",1,null],[12,"cert_dir","","",1,null],[5,"find_certs_dirs","","Probe the system for the directory in which CA certificates should likely be\nfound.",null,{"inputs":[],"output":{"name":"vec"}}],[5,"init_ssl_cert_env_vars","","",null,{"inputs":[],"output":null}],[5,"probe","","",null,{"inputs":[],"output":{"name":"proberesult"}}],[6,"ASN1_INTEGER","openssl_sys","",null,null],[6,"ASN1_STRING","","",null,null],[6,"ASN1_TIME","","",null,null],[6,"BIO","","",null,null],[6,"BIO_METHOD","","",null,null],[6,"BN_CTX","","",null,null],[6,"COMP_METHOD","","",null,null],[6,"CRYPTO_EX_DATA","","",null,null],[6,"ENGINE","","",null,null],[6,"EVP_CIPHER","","",null,null],[6,"EVP_CIPHER_CTX","","",null,null],[6,"EVP_MD","","",null,null],[6,"EVP_PKEY","","",null,null],[6,"EVP_PKEY_CTX","","",null,null],[6,"RSA","","",null,null],[6,"SSL","","",null,null],[6,"SSL_CTX","","",null,null],[6,"SSL_METHOD","","",null,null],[6,"X509","","",null,null],[6,"X509_CRL","","",null,null],[6,"X509_EXTENSION","","",null,null],[6,"X509_NAME","","",null,null],[6,"X509_NAME_ENTRY","","",null,null],[6,"X509_REQ","","",null,null],[6,"X509_STORE_CTX","","",null,null],[6,"CRYPTO_EX_new","","",null,null],[6,"CRYPTO_EX_dup","","",null,null],[6,"CRYPTO_EX_free","","",null,null],[6,"PasswordCallback","","",null,null],[17,"BIO_CTRL_EOF","","",null,null],[17,"CRYPTO_LOCK","","",null,null],[17,"MBSTRING_ASC","","",null,null],[17,"MBSTRING_BMP","","",null,null],[17,"MBSTRING_FLAG","","",null,null],[17,"MBSTRING_UNIV","","",null,null],[17,"MBSTRING_UTF8","","",null,null],[17,"NID_ext_key_usage","","",null,null],[17,"NID_key_usage","","",null,null],[17,"SSL_CTRL_OPTIONS","","",null,null],[17,"SSL_CTRL_CLEAR_OPTIONS","","",null,null],[17,"SSL_CTRL_SET_TLSEXT_HOSTNAME","","",null,null],[17,"SSL_CTRL_EXTRA_CHAIN_CERT","","",null,null],[17,"SSL_CTRL_SET_READ_AHEAD","","",null,null],[17,"SSL_ERROR_NONE","","",null,null],[17,"SSL_ERROR_SSL","","",null,null],[17,"SSL_ERROR_SYSCALL","","",null,null],[17,"SSL_ERROR_WANT_ACCEPT","","",null,null],[17,"SSL_ERROR_WANT_CONNECT","","",null,null],[17,"SSL_ERROR_WANT_READ","","",null,null],[17,"SSL_ERROR_WANT_WRITE","","",null,null],[17,"SSL_ERROR_WANT_X509_LOOKUP","","",null,null],[17,"SSL_ERROR_ZERO_RETURN","","",null,null],[17,"SSL_VERIFY_NONE","","",null,null],[17,"SSL_VERIFY_PEER","","",null,null],[17,"SSL_VERIFY_FAIL_IF_NO_PEER_CERT","","",null,null],[17,"TLSEXT_NAMETYPE_host_name","","",null,null],[17,"SSL_TLSEXT_ERR_OK","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_WARNING","","",null,null],[17,"SSL_TLSEXT_ERR_ALERT_FATAL","","",null,null],[17,"SSL_TLSEXT_ERR_NOACK","","",null,null],[17,"V_ASN1_GENERALIZEDTIME","","",null,null],[17,"V_ASN1_UTCTIME","","",null,null],[17,"X509_FILETYPE_ASN1","","",null,null],[17,"X509_FILETYPE_DEFAULT","","",null,null],[17,"X509_FILETYPE_PEM","","",null,null],[17,"X509_V_ERR_AKID_ISSUER_SERIAL_MISMATCH","","",null,null],[17,"X509_V_ERR_AKID_SKID_MISMATCH","","",null,null],[17,"X509_V_ERR_APPLICATION_VERIFICATION","","",null,null],[17,"X509_V_ERR_CERT_CHAIN_TOO_LONG","","",null,null],[17,"X509_V_ERR_CERT_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CERT_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CERT_REJECTED","","",null,null],[17,"X509_V_ERR_CERT_REVOKED","","",null,null],[17,"X509_V_ERR_CERT_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_CERT_UNTRUSTED","","",null,null],[17,"X509_V_ERR_CRL_HAS_EXPIRED","","",null,null],[17,"X509_V_ERR_CRL_NOT_YET_VALID","","",null,null],[17,"X509_V_ERR_CRL_PATH_VALIDATION_ERROR","","",null,null],[17,"X509_V_ERR_CRL_SIGNATURE_FAILURE","","",null,null],[17,"X509_V_ERR_DEPTH_ZERO_SELF_SIGNED_CERT","","",null,null],[17,"X509_V_ERR_DIFFERENT_CRL_SCOPE","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_AFTER_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CERT_NOT_BEFORE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_LAST_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_ERROR_IN_CRL_NEXT_UPDATE_FIELD","","",null,null],[17,"X509_V_ERR_EXCLUDED_VIOLATION","","",null,null],[17,"X509_V_ERR_INVALID_CA","","",null,null],[17,"X509_V_ERR_INVALID_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_NON_CA","","",null,null],[17,"X509_V_ERR_INVALID_POLICY_EXTENSION","","",null,null],[17,"X509_V_ERR_INVALID_PURPOSE","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CERTSIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_CRL_SIGN","","",null,null],[17,"X509_V_ERR_KEYUSAGE_NO_DIGITAL_SIGNATURE","","",null,null],[17,"X509_V_ERR_NO_EXPLICIT_POLICY","","",null,null],[17,"X509_V_ERR_OUT_OF_MEM","","",null,null],[17,"X509_V_ERR_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_PERMITTED_VIOLATION","","",null,null],[17,"X509_V_ERR_PROXY_CERTIFICATES_NOT_ALLOWED","","",null,null],[17,"X509_V_ERR_PROXY_PATH_LENGTH_EXCEEDED","","",null,null],[17,"X509_V_ERR_SELF_SIGNED_CERT_IN_CHAIN","","",null,null],[17,"X509_V_ERR_SUBJECT_ISSUER_MISMATCH","","",null,null],[17,"X509_V_ERR_SUBTREE_MINMAX","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECODE_ISSUER_PUBLIC_KEY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CERT_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_DECRYPT_CRL_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_CRL_ISSUER","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT","","",null,null],[17,"X509_V_ERR_UNABLE_TO_GET_ISSUER_CERT_LOCALLY","","",null,null],[17,"X509_V_ERR_UNABLE_TO_VERIFY_LEAF_SIGNATURE","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_CRL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNHANDLED_CRITICAL_EXTENSION","","",null,null],[17,"X509_V_ERR_UNNESTED_RESOURCE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_SYNTAX","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_CONSTRAINT_TYPE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_EXTENSION_FEATURE","","",null,null],[17,"X509_V_ERR_UNSUPPORTED_NAME_SYNTAX","","",null,null],[17,"X509_V_OK","","",null,null],[11,"clone","","",2,{"inputs":[{"name":"evp_md_ctx"}],"output":{"name":"evp_md_ctx"}}],[11,"clone","","",3,{"inputs":[{"name":"hmac_ctx"}],"output":{"name":"hmac_ctx"}}],[11,"clone","","",4,{"inputs":[{"name":"x509v3_ctx"}],"output":{"name":"x509v3_ctx"}}],[11,"clone","","",0,{"inputs":[{"name":"bignum"}],"output":{"name":"bignum"}}]],"paths":[[3,"BIGNUM"],[3,"ProbeResult"],[3,"EVP_MD_CTX"],[3,"HMAC_CTX"],[3,"X509V3_CTX"]]};
searchIndex['lazy_static'] = {"items":[[0,"","lazy_static","A macro for declaring lazily evaluated statics.",null,null],[14,"lazy_static!","","",null,null]],"paths":[]};
searchIndex['libc'] = {"items":[[0,"","libc","Bindings for the C standard library and other platform libraries",null,null],[0,"types","","",null,null],[0,"common","libc::types","",null,null],[0,"c95","libc::types::common","",null,null],[4,"c_void","libc::types::common::c95","Type used to construct void pointers for use with C.",null,null],[13,"__variant1","","",0,null],[13,"__variant2","","",0,null],[4,"FILE","","",null,null],[4,"fpos_t","","",null,null],[0,"c99","libc::types::common","",null,null],[6,"int8_t","libc::types::common::c99","",null,null],[6,"int16_t","","",null,null],[6,"int32_t","","",null,null],[6,"int64_t","","",null,null],[6,"uint8_t","","",null,null],[6,"uint16_t","","",null,null],[6,"uint32_t","","",null,null],[6,"uint64_t","","",null,null],[0,"posix88","libc::types::common","",null,null],[4,"DIR","libc::types::common::posix88","",null,null],[4,"dirent_t","","",null,null],[0,"os","libc::types","",null,null],[0,"common","libc::types::os","",null,null],[0,"posix01","libc::types::os::common","",null,null],[3,"stat","libc::types::os::common::posix01","",null,null],[12,"st_dev","","",1,null],[12,"st_ino","","",1,null],[12,"st_mode","","",1,null],[12,"st_nlink","","",1,null],[12,"st_uid","","",1,null],[12,"st_gid","","",1,null],[12,"st_rdev","","",1,null],[12,"st_size","","",1,null],[12,"st_atime","","",1,null],[12,"st_mtime","","",1,null],[12,"st_ctime","","",1,null],[3,"utimbuf","","",null,null],[12,"actime","","",2,null],[12,"modtime","","",2,null],[3,"timeval","","",null,null],[12,"tv_sec","","",3,null],[12,"tv_usec","","",3,null],[3,"timespec","","",null,null],[12,"tv_sec","","",4,null],[12,"tv_nsec","","",4,null],[4,"timezone","","",null,null],[11,"clone","","",1,{"inputs":[{"name":"stat"}],"output":{"name":"stat"}}],[11,"clone","","",2,{"inputs":[{"name":"utimbuf"}],"output":{"name":"utimbuf"}}],[11,"clone","","",3,{"inputs":[{"name":"timeval"}],"output":{"name":"timeval"}}],[11,"clone","","",4,{"inputs":[{"name":"timespec"}],"output":{"name":"timespec"}}],[0,"bsd44","libc::types::os::common","",null,null],[3,"sockaddr","libc::types::os::common::bsd44","",null,null],[12,"sa_family","","",5,null],[12,"sa_data","","",5,null],[3,"sockaddr_storage","","",null,null],[12,"ss_family","","",6,null],[12,"__ss_pad1","","",6,null],[12,"__ss_align","","",6,null],[12,"__ss_pad2","","",6,null],[3,"sockaddr_in","","",null,null],[12,"sin_family","","",7,null],[12,"sin_port","","",7,null],[12,"sin_addr","","",7,null],[12,"sin_zero","","",7,null],[3,"in_addr","","",null,null],[12,"s_addr","","",8,null],[3,"sockaddr_in6","","",null,null],[12,"sin6_family","","",9,null],[12,"sin6_port","","",9,null],[12,"sin6_flowinfo","","",9,null],[12,"sin6_addr","","",9,null],[12,"sin6_scope_id","","",9,null],[3,"in6_addr","","",null,null],[12,"s6_addr","","",10,null],[3,"ip_mreq","","",null,null],[12,"imr_multiaddr","","",11,null],[12,"imr_interface","","",11,null],[3,"ip6_mreq","","",null,null],[12,"ipv6mr_multiaddr","","",12,null],[12,"ipv6mr_interface","","",12,null],[3,"addrinfo","","",null,null],[12,"ai_flags","","",13,null],[12,"ai_family","","",13,null],[12,"ai_socktype","","",13,null],[12,"ai_protocol","","",13,null],[12,"ai_addrlen","","",13,null],[12,"ai_canonname","","",13,null],[12,"ai_addr","","",13,null],[12,"ai_next","","",13,null],[3,"sockaddr_un","","",null,null],[12,"sun_family","","",14,null],[12,"sun_path","","",14,null],[6,"SOCKET","","",null,null],[6,"socklen_t","","",null,null],[6,"sa_family_t","","",null,null],[6,"in_port_t","","",null,null],[6,"in_addr_t","","",null,null],[11,"clone","","",5,{"inputs":[{"name":"sockaddr"}],"output":{"name":"sockaddr"}}],[11,"clone","","",6,{"inputs":[{"name":"sockaddr_storage"}],"output":{"name":"sockaddr_storage"}}],[11,"clone","","",7,{"inputs":[{"name":"sockaddr_in"}],"output":{"name":"sockaddr_in"}}],[11,"clone","","",8,{"inputs":[{"name":"in_addr"}],"output":{"name":"in_addr"}}],[11,"clone","","",9,{"inputs":[{"name":"sockaddr_in6"}],"output":{"name":"sockaddr_in6"}}],[11,"clone","","",10,{"inputs":[{"name":"in6_addr"}],"output":{"name":"in6_addr"}}],[11,"clone","","",11,{"inputs":[{"name":"ip_mreq"}],"output":{"name":"ip_mreq"}}],[11,"clone","","",12,{"inputs":[{"name":"ip6_mreq"}],"output":{"name":"ip6_mreq"}}],[11,"clone","","",13,{"inputs":[{"name":"addrinfo"}],"output":{"name":"addrinfo"}}],[11,"clone","","",14,{"inputs":[{"name":"sockaddr_un"}],"output":{"name":"sockaddr_un"}}],[0,"arch","libc::types::os","",null,null],[0,"c95","libc::types::os::arch","",null,null],[6,"c_char","libc::types::os::arch::c95","",null,null],[6,"c_schar","","",null,null],[6,"c_uchar","","",null,null],[6,"c_short","","",null,null],[6,"c_ushort","","",null,null],[6,"c_int","","",null,null],[6,"c_uint","","",null,null],[6,"c_long","","",null,null],[6,"c_ulong","","",null,null],[6,"c_float","","",null,null],[6,"c_double","","",null,null],[6,"size_t","","",null,null],[6,"ptrdiff_t","","",null,null],[6,"clock_t","","",null,null],[6,"time_t","","",null,null],[6,"suseconds_t","","",null,null],[6,"wchar_t","","",null,null],[0,"c99","libc::types::os::arch","",null,null],[6,"c_longlong","libc::types::os::arch::c99","",null,null],[6,"c_ulonglong","","",null,null],[6,"intptr_t","","",null,null],[6,"uintptr_t","","",null,null],[6,"intmax_t","","",null,null],[6,"uintmax_t","","",null,null],[0,"posix88","libc::types::os::arch","",null,null],[6,"off_t","libc::types::os::arch::posix88","",null,null],[6,"dev_t","","",null,null],[6,"ino_t","","",null,null],[6,"pid_t","","",null,null],[6,"useconds_t","","",null,null],[6,"mode_t","","",null,null],[6,"ssize_t","","",null,null],[0,"extra","libc::types::os::arch","",null,null],[3,"SECURITY_ATTRIBUTES","libc::types::os::arch::extra","",null,null],[12,"nLength","","",15,null],[12,"lpSecurityDescriptor","","",15,null],[12,"bInheritHandle","","",15,null],[3,"STARTUPINFO","","",null,null],[12,"cb","","",16,null],[12,"lpReserved","","",16,null],[12,"lpDesktop","","",16,null],[12,"lpTitle","","",16,null],[12,"dwX","","",16,null],[12,"dwY","","",16,null],[12,"dwXSize","","",16,null],[12,"dwYSize","","",16,null],[12,"dwXCountChars","","",16,null],[12,"dwYCountCharts","","",16,null],[12,"dwFillAttribute","","",16,null],[12,"dwFlags","","",16,null],[12,"wShowWindow","","",16,null],[12,"cbReserved2","","",16,null],[12,"lpReserved2","","",16,null],[12,"hStdInput","","",16,null],[12,"hStdOutput","","",16,null],[12,"hStdError","","",16,null],[3,"PROCESS_INFORMATION","","",null,null],[12,"hProcess","","",17,null],[12,"hThread","","",17,null],[12,"dwProcessId","","",17,null],[12,"dwThreadId","","",17,null],[3,"SYSTEM_INFO","","",null,null],[12,"wProcessorArchitecture","","",18,null],[12,"wReserved","","",18,null],[12,"dwPageSize","","",18,null],[12,"lpMinimumApplicationAddress","","",18,null],[12,"lpMaximumApplicationAddress","","",18,null],[12,"dwActiveProcessorMask","","",18,null],[12,"dwNumberOfProcessors","","",18,null],[12,"dwProcessorType","","",18,null],[12,"dwAllocationGranularity","","",18,null],[12,"wProcessorLevel","","",18,null],[12,"wProcessorRevision","","",18,null],[3,"MEMORY_BASIC_INFORMATION","","",null,null],[12,"BaseAddress","","",19,null],[12,"AllocationBase","","",19,null],[12,"AllocationProtect","","",19,null],[12,"RegionSize","","",19,null],[12,"State","","",19,null],[12,"Protect","","",19,null],[12,"Type","","",19,null],[3,"OVERLAPPED","","",null,null],[12,"Internal","","",20,null],[12,"InternalHigh","","",20,null],[12,"Offset","","",20,null],[12,"OffsetHigh","","",20,null],[12,"hEvent","","",20,null],[3,"FILETIME","","",null,null],[12,"dwLowDateTime","","",21,null],[12,"dwHighDateTime","","",21,null],[3,"GUID","","",null,null],[12,"Data1","","",22,null],[12,"Data2","","",22,null],[12,"Data3","","",22,null],[12,"Data4","","",22,null],[3,"WSAPROTOCOLCHAIN","","",null,null],[12,"ChainLen","","",23,null],[12,"ChainEntries","","",23,null],[3,"WSAPROTOCOL_INFO","","",null,null],[12,"dwServiceFlags1","","",24,null],[12,"dwServiceFlags2","","",24,null],[12,"dwServiceFlags3","","",24,null],[12,"dwServiceFlags4","","",24,null],[12,"dwProviderFlags","","",24,null],[12,"ProviderId","","",24,null],[12,"dwCatalogEntryId","","",24,null],[12,"ProtocolChain","","",24,null],[12,"iVersion","","",24,null],[12,"iAddressFamily","","",24,null],[12,"iMaxSockAddr","","",24,null],[12,"iMinSockAddr","","",24,null],[12,"iSocketType","","",24,null],[12,"iProtocol","","",24,null],[12,"iProtocolMaxOffset","","",24,null],[12,"iNetworkByteOrder","","",24,null],[12,"iSecurityScheme","","",24,null],[12,"dwMessageSize","","",24,null],[12,"dwProviderReserved","","",24,null],[12,"szProtocol","","",24,null],[3,"WIN32_FIND_DATAW","","",null,null],[12,"dwFileAttributes","","",25,null],[12,"ftCreationTime","","",25,null],[12,"ftLastAccessTime","","",25,null],[12,"ftLastWriteTime","","",25,null],[12,"nFileSizeHigh","","",25,null],[12,"nFileSizeLow","","",25,null],[12,"dwReserved0","","",25,null],[12,"dwReserved1","","",25,null],[12,"cFileName","","",25,null],[12,"cAlternateFileName","","",25,null],[6,"BOOL","","",null,null],[6,"BYTE","","",null,null],[6,"BOOLEAN","","",null,null],[6,"CCHAR","","",null,null],[6,"CHAR","","",null,null],[6,"DWORD","","",null,null],[6,"DWORDLONG","","",null,null],[6,"HANDLE","","",null,null],[6,"HINSTANCE","","",null,null],[6,"HMODULE","","",null,null],[6,"LONG","","",null,null],[6,"PLONG","","",null,null],[6,"LONG_PTR","","",null,null],[6,"LARGE_INTEGER","","",null,null],[6,"PLARGE_INTEGER","","",null,null],[6,"LPCWSTR","","",null,null],[6,"LPCSTR","","",null,null],[6,"LPWSTR","","",null,null],[6,"LPSTR","","",null,null],[6,"LPWCH","","",null,null],[6,"LPCH","","",null,null],[6,"LPSECURITY_ATTRIBUTES","","",null,null],[6,"LPVOID","","",null,null],[6,"LPCVOID","","",null,null],[6,"LPBYTE","","",null,null],[6,"LPWORD","","",null,null],[6,"LPDWORD","","",null,null],[6,"LPHANDLE","","",null,null],[6,"LRESULT","","",null,null],[6,"PBOOL","","",null,null],[6,"WCHAR","","",null,null],[6,"WORD","","",null,null],[6,"SIZE_T","","",null,null],[6,"time64_t","","",null,null],[6,"int64","","",null,null],[6,"LPSTARTUPINFO","","",null,null],[6,"LPPROCESS_INFORMATION","","",null,null],[6,"LPSYSTEM_INFO","","",null,null],[6,"LPMEMORY_BASIC_INFORMATION","","",null,null],[6,"LPOVERLAPPED","","",null,null],[6,"LPFILETIME","","",null,null],[6,"LPWSAPROTOCOLCHAIN","","",null,null],[6,"LPWSAPROTOCOL_INFO","","",null,null],[6,"GROUP","","",null,null],[6,"LPWIN32_FIND_DATAW","","",null,null],[11,"clone","","",15,{"inputs":[{"name":"security_attributes"}],"output":{"name":"security_attributes"}}],[11,"clone","","",16,{"inputs":[{"name":"startupinfo"}],"output":{"name":"startupinfo"}}],[11,"clone","","",17,{"inputs":[{"name":"process_information"}],"output":{"name":"process_information"}}],[11,"clone","","",18,{"inputs":[{"name":"system_info"}],"output":{"name":"system_info"}}],[11,"clone","","",19,{"inputs":[{"name":"memory_basic_information"}],"output":{"name":"memory_basic_information"}}],[11,"clone","","",20,{"inputs":[{"name":"overlapped"}],"output":{"name":"overlapped"}}],[11,"clone","","",21,{"inputs":[{"name":"filetime"}],"output":{"name":"filetime"}}],[11,"clone","","",22,{"inputs":[{"name":"guid"}],"output":{"name":"guid"}}],[11,"clone","","",23,{"inputs":[{"name":"wsaprotocolchain"}],"output":{"name":"wsaprotocolchain"}}],[11,"clone","","",24,{"inputs":[{"name":"wsaprotocol_info"}],"output":{"name":"wsaprotocol_info"}}],[11,"clone","","",25,{"inputs":[{"name":"win32_find_dataw"}],"output":{"name":"win32_find_dataw"}}],[0,"consts","libc","",null,null],[0,"os","libc::consts","",null,null],[0,"c95","libc::consts::os","",null,null],[17,"EXIT_FAILURE","libc::consts::os::c95","",null,null],[17,"EXIT_SUCCESS","","",null,null],[17,"RAND_MAX","","",null,null],[17,"EOF","","",null,null],[17,"SEEK_SET","","",null,null],[17,"SEEK_CUR","","",null,null],[17,"SEEK_END","","",null,null],[17,"_IOFBF","","",null,null],[17,"_IONBF","","",null,null],[17,"_IOLBF","","",null,null],[17,"BUFSIZ","","",null,null],[17,"FOPEN_MAX","","",null,null],[17,"FILENAME_MAX","","",null,null],[17,"L_tmpnam","","",null,null],[17,"TMP_MAX","","",null,null],[17,"WSAEINTR","","",null,null],[17,"WSAEBADF","","",null,null],[17,"WSAEACCES","","",null,null],[17,"WSAEFAULT","","",null,null],[17,"WSAEINVAL","","",null,null],[17,"WSAEMFILE","","",null,null],[17,"WSAEWOULDBLOCK","","",null,null],[17,"WSAEINPROGRESS","","",null,null],[17,"WSAEALREADY","","",null,null],[17,"WSAENOTSOCK","","",null,null],[17,"WSAEDESTADDRREQ","","",null,null],[17,"WSAEMSGSIZE","","",null,null],[17,"WSAEPROTOTYPE","","",null,null],[17,"WSAENOPROTOOPT","","",null,null],[17,"WSAEPROTONOSUPPORT","","",null,null],[17,"WSAESOCKTNOSUPPORT","","",null,null],[17,"WSAEOPNOTSUPP","","",null,null],[17,"WSAEPFNOSUPPORT","","",null,null],[17,"WSAEAFNOSUPPORT","","",null,null],[17,"WSAEADDRINUSE","","",null,null],[17,"WSAEADDRNOTAVAIL","","",null,null],[17,"WSAENETDOWN","","",null,null],[17,"WSAENETUNREACH","","",null,null],[17,"WSAENETRESET","","",null,null],[17,"WSAECONNABORTED","","",null,null],[17,"WSAECONNRESET","","",null,null],[17,"WSAENOBUFS","","",null,null],[17,"WSAEISCONN","","",null,null],[17,"WSAENOTCONN","","",null,null],[17,"WSAESHUTDOWN","","",null,null],[17,"WSAETOOMANYREFS","","",null,null],[17,"WSAETIMEDOUT","","",null,null],[17,"WSAECONNREFUSED","","",null,null],[17,"WSAELOOP","","",null,null],[17,"WSAENAMETOOLONG","","",null,null],[17,"WSAEHOSTDOWN","","",null,null],[17,"WSAEHOSTUNREACH","","",null,null],[17,"WSAENOTEMPTY","","",null,null],[17,"WSAEPROCLIM","","",null,null],[17,"WSAEUSERS","","",null,null],[17,"WSAEDQUOT","","",null,null],[17,"WSAESTALE","","",null,null],[17,"WSAEREMOTE","","",null,null],[17,"WSASYSNOTREADY","","",null,null],[17,"WSAVERNOTSUPPORTED","","",null,null],[17,"WSANOTINITIALISED","","",null,null],[17,"WSAEDISCON","","",null,null],[17,"WSAENOMORE","","",null,null],[17,"WSAECANCELLED","","",null,null],[17,"WSAEINVALIDPROCTABLE","","",null,null],[17,"WSAEINVALIDPROVIDER","","",null,null],[17,"WSAEPROVIDERFAILEDINIT","","",null,null],[0,"posix88","libc::consts::os","",null,null],[17,"O_RDONLY","libc::consts::os::posix88","",null,null],[17,"O_WRONLY","","",null,null],[17,"O_RDWR","","",null,null],[17,"O_APPEND","","",null,null],[17,"O_CREAT","","",null,null],[17,"O_EXCL","","",null,null],[17,"O_TRUNC","","",null,null],[17,"S_IFIFO","","",null,null],[17,"S_IFCHR","","",null,null],[17,"S_IFBLK","","",null,null],[17,"S_IFDIR","","",null,null],[17,"S_IFREG","","",null,null],[17,"S_IFLNK","","",null,null],[17,"S_IFMT","","",null,null],[17,"S_IEXEC","","",null,null],[17,"S_IWRITE","","",null,null],[17,"S_IREAD","","",null,null],[17,"S_IRWXU","","",null,null],[17,"S_IXUSR","","",null,null],[17,"S_IWUSR","","",null,null],[17,"S_IRUSR","","",null,null],[17,"S_IRWXG","","",null,null],[17,"S_IXGRP","","",null,null],[17,"S_IWGRP","","",null,null],[17,"S_IRGRP","","",null,null],[17,"S_IRWXO","","",null,null],[17,"S_IXOTH","","",null,null],[17,"S_IWOTH","","",null,null],[17,"S_IROTH","","",null,null],[17,"F_OK","","",null,null],[17,"R_OK","","",null,null],[17,"W_OK","","",null,null],[17,"X_OK","","",null,null],[17,"STDIN_FILENO","","",null,null],[17,"STDOUT_FILENO","","",null,null],[17,"STDERR_FILENO","","",null,null],[0,"bsd44","libc::consts::os","",null,null],[17,"AF_INET","libc::consts::os::bsd44","",null,null],[17,"AF_INET6","","",null,null],[17,"SOCK_STREAM","","",null,null],[17,"SOCK_DGRAM","","",null,null],[17,"SOCK_RAW","","",null,null],[17,"IPPROTO_TCP","","",null,null],[17,"IPPROTO_IP","","",null,null],[17,"IPPROTO_IPV6","","",null,null],[17,"IP_MULTICAST_TTL","","",null,null],[17,"IP_MULTICAST_LOOP","","",null,null],[17,"IP_ADD_MEMBERSHIP","","",null,null],[17,"IP_DROP_MEMBERSHIP","","",null,null],[17,"IPV6_ADD_MEMBERSHIP","","",null,null],[17,"IPV6_DROP_MEMBERSHIP","","",null,null],[17,"IP_TTL","","",null,null],[17,"IP_HDRINCL","","",null,null],[17,"TCP_NODELAY","","",null,null],[17,"SOL_SOCKET","","",null,null],[17,"SO_DEBUG","","",null,null],[17,"SO_ACCEPTCONN","","",null,null],[17,"SO_REUSEADDR","","",null,null],[17,"SO_KEEPALIVE","","",null,null],[17,"SO_DONTROUTE","","",null,null],[17,"SO_BROADCAST","","",null,null],[17,"SO_USELOOPBACK","","",null,null],[17,"SO_LINGER","","",null,null],[17,"SO_OOBINLINE","","",null,null],[17,"SO_SNDBUF","","",null,null],[17,"SO_RCVBUF","","",null,null],[17,"SO_SNDLOWAT","","",null,null],[17,"SO_RCVLOWAT","","",null,null],[17,"SO_SNDTIMEO","","",null,null],[17,"SO_RCVTIMEO","","",null,null],[17,"SO_ERROR","","",null,null],[17,"SO_TYPE","","",null,null],[17,"IFF_LOOPBACK","","",null,null],[17,"SHUT_RD","","",null,null],[17,"SHUT_WR","","",null,null],[17,"SHUT_RDWR","","",null,null],[0,"extra","libc::consts::os","",null,null],[17,"TRUE","libc::consts::os::extra","",null,null],[17,"FALSE","","",null,null],[17,"O_TEXT","","",null,null],[17,"O_BINARY","","",null,null],[17,"O_NOINHERIT","","",null,null],[17,"ERROR_SUCCESS","","",null,null],[17,"ERROR_INVALID_FUNCTION","","",null,null],[17,"ERROR_FILE_NOT_FOUND","","",null,null],[17,"ERROR_ACCESS_DENIED","","",null,null],[17,"ERROR_INVALID_HANDLE","","",null,null],[17,"ERROR_BROKEN_PIPE","","",null,null],[17,"ERROR_DISK_FULL","","",null,null],[17,"ERROR_CALL_NOT_IMPLEMENTED","","",null,null],[17,"ERROR_INSUFFICIENT_BUFFER","","",null,null],[17,"ERROR_INVALID_NAME","","",null,null],[17,"ERROR_ALREADY_EXISTS","","",null,null],[17,"ERROR_PIPE_BUSY","","",null,null],[17,"ERROR_NO_DATA","","",null,null],[17,"ERROR_INVALID_ADDRESS","","",null,null],[17,"ERROR_PIPE_CONNECTED","","",null,null],[17,"ERROR_NOTHING_TO_TERMINATE","","",null,null],[17,"ERROR_OPERATION_ABORTED","","",null,null],[17,"ERROR_IO_PENDING","","",null,null],[17,"ERROR_FILE_INVALID","","",null,null],[17,"ERROR_NOT_FOUND","","",null,null],[17,"INVALID_HANDLE_VALUE","","",null,null],[17,"DELETE","","",null,null],[17,"READ_CONTROL","","",null,null],[17,"SYNCHRONIZE","","",null,null],[17,"WRITE_DAC","","",null,null],[17,"WRITE_OWNER","","",null,null],[17,"PROCESS_CREATE_PROCESS","","",null,null],[17,"PROCESS_CREATE_THREAD","","",null,null],[17,"PROCESS_DUP_HANDLE","","",null,null],[17,"PROCESS_QUERY_INFORMATION","","",null,null],[17,"PROCESS_QUERY_LIMITED_INFORMATION","","",null,null],[17,"PROCESS_SET_INFORMATION","","",null,null],[17,"PROCESS_SET_QUOTA","","",null,null],[17,"PROCESS_SUSPEND_RESUME","","",null,null],[17,"PROCESS_TERMINATE","","",null,null],[17,"PROCESS_VM_OPERATION","","",null,null],[17,"PROCESS_VM_READ","","",null,null],[17,"PROCESS_VM_WRITE","","",null,null],[17,"STARTF_FORCEONFEEDBACK","","",null,null],[17,"STARTF_FORCEOFFFEEDBACK","","",null,null],[17,"STARTF_PREVENTPINNING","","",null,null],[17,"STARTF_RUNFULLSCREEN","","",null,null],[17,"STARTF_TITLEISAPPID","","",null,null],[17,"STARTF_TITLEISLINKNAME","","",null,null],[17,"STARTF_USECOUNTCHARS","","",null,null],[17,"STARTF_USEFILLATTRIBUTE","","",null,null],[17,"STARTF_USEHOTKEY","","",null,null],[17,"STARTF_USEPOSITION","","",null,null],[17,"STARTF_USESHOWWINDOW","","",null,null],[17,"STARTF_USESIZE","","",null,null],[17,"STARTF_USESTDHANDLES","","",null,null],[17,"WAIT_ABANDONED","","",null,null],[17,"WAIT_OBJECT_0","","",null,null],[17,"WAIT_TIMEOUT","","",null,null],[17,"WAIT_FAILED","","",null,null],[17,"DUPLICATE_CLOSE_SOURCE","","",null,null],[17,"DUPLICATE_SAME_ACCESS","","",null,null],[17,"INFINITE","","",null,null],[17,"STILL_ACTIVE","","",null,null],[17,"MEM_COMMIT","","",null,null],[17,"MEM_RESERVE","","",null,null],[17,"MEM_DECOMMIT","","",null,null],[17,"MEM_RELEASE","","",null,null],[17,"MEM_RESET","","",null,null],[17,"MEM_RESET_UNDO","","",null,null],[17,"MEM_LARGE_PAGES","","",null,null],[17,"MEM_PHYSICAL","","",null,null],[17,"MEM_TOP_DOWN","","",null,null],[17,"MEM_WRITE_WATCH","","",null,null],[17,"PAGE_EXECUTE","","",null,null],[17,"PAGE_EXECUTE_READ","","",null,null],[17,"PAGE_EXECUTE_READWRITE","","",null,null],[17,"PAGE_EXECUTE_WRITECOPY","","",null,null],[17,"PAGE_NOACCESS","","",null,null],[17,"PAGE_READONLY","","",null,null],[17,"PAGE_READWRITE","","",null,null],[17,"PAGE_WRITECOPY","","",null,null],[17,"PAGE_GUARD","","",null,null],[17,"PAGE_NOCACHE","","",null,null],[17,"PAGE_WRITECOMBINE","","",null,null],[17,"SEC_COMMIT","","",null,null],[17,"SEC_IMAGE","","",null,null],[17,"SEC_IMAGE_NO_EXECUTE","","",null,null],[17,"SEC_LARGE_PAGES","","",null,null],[17,"SEC_NOCACHE","","",null,null],[17,"SEC_RESERVE","","",null,null],[17,"SEC_WRITECOMBINE","","",null,null],[17,"FILE_MAP_ALL_ACCESS","","",null,null],[17,"FILE_MAP_READ","","",null,null],[17,"FILE_MAP_WRITE","","",null,null],[17,"FILE_MAP_COPY","","",null,null],[17,"FILE_MAP_EXECUTE","","",null,null],[17,"PROCESSOR_ARCHITECTURE_INTEL","","",null,null],[17,"PROCESSOR_ARCHITECTURE_ARM","","",null,null],[17,"PROCESSOR_ARCHITECTURE_IA64","","",null,null],[17,"PROCESSOR_ARCHITECTURE_AMD64","","",null,null],[17,"PROCESSOR_ARCHITECTURE_UNKNOWN","","",null,null],[17,"MOVEFILE_COPY_ALLOWED","","",null,null],[17,"MOVEFILE_CREATE_HARDLINK","","",null,null],[17,"MOVEFILE_DELAY_UNTIL_REBOOT","","",null,null],[17,"MOVEFILE_FAIL_IF_NOT_TRACKABLE","","",null,null],[17,"MOVEFILE_REPLACE_EXISTING","","",null,null],[17,"MOVEFILE_WRITE_THROUGH","","",null,null],[17,"SYMBOLIC_LINK_FLAG_DIRECTORY","","",null,null],[17,"FILE_SHARE_DELETE","","",null,null],[17,"FILE_SHARE_READ","","",null,null],[17,"FILE_SHARE_WRITE","","",null,null],[17,"CREATE_ALWAYS","","",null,null],[17,"CREATE_NEW","","",null,null],[17,"OPEN_ALWAYS","","",null,null],[17,"OPEN_EXISTING","","",null,null],[17,"TRUNCATE_EXISTING","","",null,null],[17,"FILE_APPEND_DATA","","",null,null],[17,"FILE_READ_DATA","","",null,null],[17,"FILE_WRITE_DATA","","",null,null],[17,"FILE_ATTRIBUTE_ARCHIVE","","",null,null],[17,"FILE_ATTRIBUTE_COMPRESSED","","",null,null],[17,"FILE_ATTRIBUTE_DEVICE","","",null,null],[17,"FILE_ATTRIBUTE_DIRECTORY","","",null,null],[17,"FILE_ATTRIBUTE_ENCRYPTED","","",null,null],[17,"FILE_ATTRIBUTE_HIDDEN","","",null,null],[17,"FILE_ATTRIBUTE_INTEGRITY_STREAM","","",null,null],[17,"FILE_ATTRIBUTE_NORMAL","","",null,null],[17,"FILE_ATTRIBUTE_NOT_CONTENT_INDEXED","","",null,null],[17,"FILE_ATTRIBUTE_NO_SCRUB_DATA","","",null,null],[17,"FILE_ATTRIBUTE_OFFLINE","","",null,null],[17,"FILE_ATTRIBUTE_READONLY","","",null,null],[17,"FILE_ATTRIBUTE_REPARSE_POINT","","",null,null],[17,"FILE_ATTRIBUTE_SPARSE_FILE","","",null,null],[17,"FILE_ATTRIBUTE_SYSTEM","","",null,null],[17,"FILE_ATTRIBUTE_TEMPORARY","","",null,null],[17,"FILE_ATTRIBUTE_VIRTUAL","","",null,null],[17,"FILE_FLAG_BACKUP_SEMANTICS","","",null,null],[17,"FILE_FLAG_DELETE_ON_CLOSE","","",null,null],[17,"FILE_FLAG_NO_BUFFERING","","",null,null],[17,"FILE_FLAG_OPEN_NO_RECALL","","",null,null],[17,"FILE_FLAG_OPEN_REPARSE_POINT","","",null,null],[17,"FILE_FLAG_OVERLAPPED","","",null,null],[17,"FILE_FLAG_POSIX_SEMANTICS","","",null,null],[17,"FILE_FLAG_RANDOM_ACCESS","","",null,null],[17,"FILE_FLAG_SESSION_AWARE","","",null,null],[17,"FILE_FLAG_SEQUENTIAL_SCAN","","",null,null],[17,"FILE_FLAG_WRITE_THROUGH","","",null,null],[17,"FILE_FLAG_FIRST_PIPE_INSTANCE","","",null,null],[17,"FILE_NAME_NORMALIZED","","",null,null],[17,"FILE_NAME_OPENED","","",null,null],[17,"VOLUME_NAME_DOS","","",null,null],[17,"VOLUME_NAME_GUID","","",null,null],[17,"VOLUME_NAME_NONE","","",null,null],[17,"VOLUME_NAME_NT","","",null,null],[17,"GENERIC_READ","","",null,null],[17,"GENERIC_WRITE","","",null,null],[17,"GENERIC_EXECUTE","","",null,null],[17,"GENERIC_ALL","","",null,null],[17,"FILE_WRITE_ATTRIBUTES","","",null,null],[17,"FILE_READ_ATTRIBUTES","","",null,null],[17,"STANDARD_RIGHTS_READ","","",null,null],[17,"STANDARD_RIGHTS_WRITE","","",null,null],[17,"FILE_WRITE_EA","","",null,null],[17,"FILE_READ_EA","","",null,null],[17,"FILE_GENERIC_READ","","",null,null],[17,"FILE_GENERIC_WRITE","","",null,null],[17,"FILE_BEGIN","","",null,null],[17,"FILE_CURRENT","","",null,null],[17,"FILE_END","","",null,null],[17,"MAX_PROTOCOL_CHAIN","","",null,null],[17,"WSAPROTOCOL_LEN","","",null,null],[17,"INVALID_SOCKET","","",null,null],[17,"DETACHED_PROCESS","","",null,null],[17,"CREATE_NEW_PROCESS_GROUP","","",null,null],[17,"CREATE_UNICODE_ENVIRONMENT","","",null,null],[17,"PIPE_ACCESS_DUPLEX","","",null,null],[17,"PIPE_ACCESS_INBOUND","","",null,null],[17,"PIPE_ACCESS_OUTBOUND","","",null,null],[17,"PIPE_TYPE_BYTE","","",null,null],[17,"PIPE_TYPE_MESSAGE","","",null,null],[17,"PIPE_READMODE_BYTE","","",null,null],[17,"PIPE_READMODE_MESSAGE","","",null,null],[17,"PIPE_WAIT","","",null,null],[17,"PIPE_NOWAIT","","",null,null],[17,"PIPE_ACCEPT_REMOTE_CLIENTS","","",null,null],[17,"PIPE_REJECT_REMOTE_CLIENTS","","",null,null],[17,"PIPE_UNLIMITED_INSTANCES","","",null,null],[17,"IPPROTO_RAW","","",null,null],[17,"FIONBIO","","",null,null],[0,"funcs","libc","",null,null],[0,"c95","libc::funcs","",null,null],[0,"ctype","libc::funcs::c95","",null,null],[5,"isalnum","libc::funcs::c95::ctype","",null,null],[5,"isalpha","","",null,null],[5,"iscntrl","","",null,null],[5,"isdigit","","",null,null],[5,"isgraph","","",null,null],[5,"islower","","",null,null],[5,"isprint","","",null,null],[5,"ispunct","","",null,null],[5,"isspace","","",null,null],[5,"isupper","","",null,null],[5,"isxdigit","","",null,null],[5,"tolower","","",null,null],[5,"toupper","","",null,null],[0,"stdio","libc::funcs::c95","",null,null],[5,"fopen","libc::funcs::c95::stdio","",null,null],[5,"freopen","","",null,null],[5,"fflush","","",null,null],[5,"fclose","","",null,null],[5,"remove","","",null,null],[5,"rename","","",null,null],[5,"tmpfile","","",null,null],[5,"setvbuf","","",null,null],[5,"setbuf","","",null,null],[5,"fgetc","","",null,null],[5,"fgets","","",null,null],[5,"fputc","","",null,null],[5,"fputs","","",null,null],[5,"puts","","",null,null],[5,"ungetc","","",null,null],[5,"fread","","",null,null],[5,"fwrite","","",null,null],[5,"fseek","","",null,null],[5,"ftell","","",null,null],[5,"rewind","","",null,null],[5,"fgetpos","","",null,null],[5,"fsetpos","","",null,null],[5,"feof","","",null,null],[5,"ferror","","",null,null],[5,"perror","","",null,null],[0,"stdlib","libc::funcs::c95","",null,null],[5,"abs","libc::funcs::c95::stdlib","",null,null],[5,"labs","","",null,null],[5,"atof","","",null,null],[5,"atoi","","",null,null],[5,"strtod","","",null,null],[5,"strtol","","",null,null],[5,"strtoul","","",null,null],[5,"calloc","","",null,null],[5,"malloc","","",null,null],[5,"realloc","","",null,null],[5,"free","","",null,null],[5,"exit","","Exits the running program in a possibly dangerous manner.",null,null],[5,"_exit","","",null,null],[5,"atexit","","",null,null],[5,"system","","",null,null],[5,"getenv","","",null,null],[5,"rand","","",null,null],[5,"srand","","",null,null],[0,"string","libc::funcs::c95","",null,null],[5,"strcpy","libc::funcs::c95::string","",null,null],[5,"strncpy","","",null,null],[5,"strcat","","",null,null],[5,"strncat","","",null,null],[5,"strcmp","","",null,null],[5,"strncmp","","",null,null],[5,"strcoll","","",null,null],[5,"strchr","","",null,null],[5,"strrchr","","",null,null],[5,"strspn","","",null,null],[5,"strcspn","","",null,null],[5,"strpbrk","","",null,null],[5,"strstr","","",null,null],[5,"strlen","","",null,null],[5,"strerror","","",null,null],[5,"strtok","","",null,null],[5,"strxfrm","","",null,null],[5,"wcslen","","",null,null],[5,"memcmp","","",null,null],[5,"memchr","","",null,null],[0,"posix88","libc::funcs","",null,null],[0,"stat_","libc::funcs::posix88","",null,null],[5,"chmod","libc::funcs::posix88::stat_","",null,null],[5,"wchmod","","",null,null],[5,"mkdir","","",null,null],[5,"wrmdir","","",null,null],[5,"fstat","","",null,null],[5,"stat","","",null,null],[5,"wstat","","",null,null],[5,"wutime","","",null,null],[0,"stdio","libc::funcs::posix88","",null,null],[5,"popen","libc::funcs::posix88::stdio","",null,null],[5,"pclose","","",null,null],[5,"fdopen","","",null,null],[5,"fileno","","",null,null],[0,"fcntl","libc::funcs::posix88","",null,null],[5,"open","libc::funcs::posix88::fcntl","",null,null],[5,"wopen","","",null,null],[5,"creat","","",null,null],[0,"unistd","libc::funcs::posix88","",null,null],[5,"access","libc::funcs::posix88::unistd","",null,null],[5,"chdir","","",null,null],[5,"close","","",null,null],[5,"dup","","",null,null],[5,"dup2","","",null,null],[5,"execv","","",null,null],[5,"execve","","",null,null],[5,"execvp","","",null,null],[5,"execvpe","","",null,null],[5,"getcwd","","",null,null],[5,"getpid","","",null,null],[5,"isatty","","",null,null],[5,"lseek","","",null,null],[5,"pipe","","",null,null],[5,"read","","",null,null],[5,"rmdir","","",null,null],[5,"unlink","","",null,null],[5,"write","","",null,null],[0,"bsd43","libc::funcs","",null,null],[5,"socket","libc::funcs::bsd43","",null,null],[5,"connect","","",null,null],[5,"bind","","",null,null],[5,"listen","","",null,null],[5,"accept","","",null,null],[5,"getpeername","","",null,null],[5,"getsockname","","",null,null],[5,"setsockopt","","",null,null],[5,"closesocket","","",null,null],[5,"recv","","",null,null],[5,"send","","",null,null],[5,"recvfrom","","",null,null],[5,"sendto","","",null,null],[5,"shutdown","","",null,null],[0,"extra","libc::funcs","",null,null],[0,"kernel32","libc::funcs::extra","",null,null],[5,"GetEnvironmentVariableW","libc::funcs::extra::kernel32","",null,null],[5,"SetEnvironmentVariableW","","",null,null],[5,"GetEnvironmentStringsW","","",null,null],[5,"FreeEnvironmentStringsW","","",null,null],[5,"GetModuleFileNameW","","",null,null],[5,"CreateDirectoryW","","",null,null],[5,"CopyFileW","","",null,null],[5,"DeleteFileW","","",null,null],[5,"RemoveDirectoryW","","",null,null],[5,"GetCurrentDirectoryW","","",null,null],[5,"SetCurrentDirectoryW","","",null,null],[5,"GetLastError","","",null,null],[5,"FindFirstFileW","","",null,null],[5,"FindNextFileW","","",null,null],[5,"FindClose","","",null,null],[5,"DuplicateHandle","","",null,null],[5,"CloseHandle","","",null,null],[5,"OpenProcess","","",null,null],[5,"GetCurrentProcess","","",null,null],[5,"CreateProcessW","","",null,null],[5,"WaitForSingleObject","","",null,null],[5,"TerminateProcess","","",null,null],[5,"GetExitCodeProcess","","",null,null],[5,"GetSystemInfo","","",null,null],[5,"VirtualAlloc","","",null,null],[5,"VirtualFree","","",null,null],[5,"VirtualLock","","",null,null],[5,"VirtualUnlock","","",null,null],[5,"VirtualProtect","","",null,null],[5,"VirtualQuery","","",null,null],[5,"CreateFileMappingW","","",null,null],[5,"MapViewOfFile","","",null,null],[5,"UnmapViewOfFile","","",null,null],[5,"MoveFileExW","","",null,null],[5,"CreateHardLinkW","","",null,null],[5,"FlushFileBuffers","","",null,null],[5,"CreateFileW","","",null,null],[5,"ReadFile","","",null,null],[5,"WriteFile","","",null,null],[5,"SetFilePointerEx","","",null,null],[5,"SetEndOfFile","","",null,null],[5,"GetSystemTimeAsFileTime","","",null,null],[5,"QueryPerformanceFrequency","","",null,null],[5,"QueryPerformanceCounter","","",null,null],[5,"GetCurrentProcessId","","",null,null],[5,"CreateNamedPipeW","","",null,null],[5,"ConnectNamedPipe","","",null,null],[5,"WaitNamedPipeW","","",null,null],[5,"SetNamedPipeHandleState","","",null,null],[5,"CreateEventW","","",null,null],[5,"GetOverlappedResult","","",null,null],[5,"DisconnectNamedPipe","","",null,null],[0,"msvcrt","libc::funcs::extra","",null,null],[5,"commit","libc::funcs::extra::msvcrt","",null,null],[5,"get_osfhandle","","",null,null],[5,"open_osfhandle","","",null,null],[0,"winsock","libc::funcs::extra","",null,null],[5,"ioctlsocket","libc::funcs::extra::winsock","",null,null]],"paths":[[4,"c_void"],[3,"stat"],[3,"utimbuf"],[3,"timeval"],[3,"timespec"],[3,"sockaddr"],[3,"sockaddr_storage"],[3,"sockaddr_in"],[3,"in_addr"],[3,"sockaddr_in6"],[3,"in6_addr"],[3,"ip_mreq"],[3,"ip6_mreq"],[3,"addrinfo"],[3,"sockaddr_un"],[3,"SECURITY_ATTRIBUTES"],[3,"STARTUPINFO"],[3,"PROCESS_INFORMATION"],[3,"SYSTEM_INFO"],[3,"MEMORY_BASIC_INFORMATION"],[3,"OVERLAPPED"],[3,"FILETIME"],[3,"GUID"],[3,"WSAPROTOCOLCHAIN"],[3,"WSAPROTOCOL_INFO"],[3,"WIN32_FIND_DATAW"]]};
searchIndex['pkg_config'] = {"items":[[0,"","pkg_config","A build dependency for Cargo libraries to find system artifacts through the\n`pkg-config` utility.",null,null],[3,"Config","","",null,null],[3,"Library","","",null,null],[12,"libs","","",0,null],[12,"link_paths","","",0,null],[12,"frameworks","","",0,null],[12,"framework_paths","","",0,null],[12,"include_paths","","",0,null],[5,"target_supported","","",null,{"inputs":[],"output":{"name":"bool"}}],[5,"find_library","","Simple shortcut for using all default options for finding a library.",null,{"inputs":[{"name":"str"}],"output":{"name":"result"}}],[11,"clone","","",1,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"fmt","","",0,{"inputs":[{"name":"library"},{"name":"formatter"}],"output":{"name":"result"}}],[11,"new","","Creates a new set of configuration options which are all initially set\nto \"blank\".",1,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"statik","","Indicate whether the `--static` flag should be passed.",1,{"inputs":[{"name":"config"},{"name":"bool"}],"output":{"name":"config"}}],[11,"atleast_version","","Indicate that the library must be at least version `vers`.",1,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"config"}}],[11,"arg","","Add an argument to pass to pkg-config.",1,{"inputs":[{"name":"config"},{"name":"s"}],"output":{"name":"config"}}],[11,"find","","Run `pkg-config` to find the library `name`.",1,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"result"}}]],"paths":[[3,"Library"],[3,"Config"]]};
searchIndex['gcc'] = {"items":[[0,"","gcc","A library for build scripts to compile custom C code",null,null],[3,"Config","","Extra configuration to pass to gcc.",null,null],[5,"compile_library","","Compile a library from the given set of input C files.",null,null],[11,"new","","Construct a new instance of a blank set of configuration.",0,{"inputs":[{"name":"config"}],"output":{"name":"config"}}],[11,"include","","Add a directory to the `-I` or include path for headers",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"define","","Specify a `-D` variable with an optional value.",0,{"inputs":[{"name":"config"},{"name":"str"},{"name":"option"}],"output":{"name":"config"}}],[11,"object","","Add an arbitrary object file to link in",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"flag","","Add an arbitrary flag to the invocation of the compiler",0,{"inputs":[{"name":"config"},{"name":"str"}],"output":{"name":"config"}}],[11,"file","","Add a file which will be compiled",0,{"inputs":[{"name":"config"},{"name":"p"}],"output":{"name":"config"}}],[11,"cpp","","Set C++ support",0,{"inputs":[{"name":"config"},{"name":"bool"}],"output":{"name":"config"}}],[11,"compile","","Run the compiler, generating the file `output`",0,{"inputs":[{"name":"config"},{"name":"str"}],"output":null}]],"paths":[[3,"Config"]]};
searchIndex['bitflags'] = {"items":[[0,"","bitflags","A typesafe bitmask flag generator.",null,null],[14,"bitflags!","","The `bitflags!` macro generates a `struct` that holds a set of C-style\nbitmask flags. It is useful for creating typesafe wrappers for C APIs.",null,null]],"paths":[]};
initSearch(searchIndex);
